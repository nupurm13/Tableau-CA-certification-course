<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.20.0412.2232                               -->
<workbook original-version='18.1' source-build='2019.1.15 (20191.20.0412.2232)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Sample - EU Superstore)' inline='true' name='federated.12boc3h0prlhvd17s7ybz038bafu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - EU Superstore' name='excel-direct.1c7ob7r121aa531f862xn0276aor'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hp/Desktop/Tableau/Resources/Exam 2/Sample - EU Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1c7ob7r121aa531f862xn0276aor' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Product ID' ordinal='12' />
            <column datatype='string' name='Category' ordinal='13' />
            <column datatype='string' name='Sub-Category' ordinal='14' />
            <column datatype='string' name='Product Name' ordinal='15' />
            <column datatype='real' name='Sales' ordinal='16' />
            <column datatype='integer' name='Quantity' ordinal='17' />
            <column datatype='real' name='Discount' ordinal='18' />
            <column datatype='real' name='Profit' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T10001:no:A1:T10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Flag' datatype='string' name='[Calculation_996421475570548740]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales])&gt;30000 THEN &quot;Good&quot; ELSE &quot;Bad&quot; END' />
      </column>
      <column caption='Rating' datatype='string' name='[Calculation_996421475575369733]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales])&gt;=300000 THEN &quot;HIGH&quot; &#13;&#10;ELSEIF SUM([Sales])&lt;300000 and SUM([Sales])&gt;=100000 THEN &quot;MEDIUM&quot;&#13;&#10;ELSE &quot;LOW&quot; END' />
      </column>
      <column caption='Profit Ratio' datatype='real' name='[Calculation_996421475576877062]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Profit]/[Sales]*100' />
      </column>
      <column aggregation='Sum' caption='First order date' datatype='integer' name='[Calculation_996421475577982983]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED [Customer ID]: YEAR(MIN([Order Date]))}' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_996421475575369733]' derivation='User' name='[usr:Calculation_996421475575369733:nk]' pivot='key' type='nominal' />
      <group caption='People bought chairs' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10480&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10015&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AF-10870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10495&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10210&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10690&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AM-10705&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AO-10810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10240&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10630&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AW-10840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BB-11545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BC-11125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11560&quot;' />
          <groupfilter from='&quot;BD-11635&quot;' function='range' level='[Customer ID]' to='&quot;BE-11335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BG-11740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BK-11260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BO-11350&quot;' />
          <groupfilter from='&quot;BP-11050&quot;' function='range' level='[Customer ID]' to='&quot;BP-11155&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11800&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BV-11245&quot;' />
          <groupfilter from='&quot;CA-12055&quot;' function='range' level='[Customer ID]' to='&quot;CA-12310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CB-12025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12475&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12610&quot;' />
          <groupfilter from='&quot;CC-12685&quot;' function='range' level='[Customer ID]' to='&quot;CD-12790&quot;' />
          <groupfilter from='&quot;CK-12205&quot;' function='range' level='[Customer ID]' to='&quot;CL-12700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-11830&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12190&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12445&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12655&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-11845&quot;' />
          <groupfilter from='&quot;CS-12175&quot;' function='range' level='[Customer ID]' to='&quot;CS-12355&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12460&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CT-11995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CV-12805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DA-13450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-12910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13270&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DC-13285&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DH-13075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DJ-13510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DJ-13630&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-12985&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-13150&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-13375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-12865&quot;' />
          <groupfilter from='&quot;DL-13315&quot;' function='range' level='[Customer ID]' to='&quot;DL-13495&quot;' />
          <groupfilter from='&quot;DM-12955&quot;' function='range' level='[Customer ID]' to='&quot;DM-13345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13000&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DR-12940&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DV-13045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13975&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-14110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-14185&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EK-13795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EL-13735&quot;' />
          <groupfilter from='&quot;EM-13825&quot;' function='range' level='[Customer ID]' to='&quot;EM-14065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14140&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EN-13780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ER-13855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FA-14230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FC-14245&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FH-14350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FH-14365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FM-14290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FO-14305&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GA-14725&quot;' />
          <groupfilter from='&quot;GD-14590&quot;' function='range' level='[Customer ID]' to='&quot;GH-14425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14680&quot;' />
          <groupfilter from='&quot;GR-14560&quot;' function='range' level='[Customer ID]' to='&quot;GT-14710&quot;' />
          <groupfilter from='&quot;GW-14605&quot;' function='range' level='[Customer ID]' to='&quot;GZ-14545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HA-14920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HF-14995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HG-14845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HG-15025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HH-15010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;IL-15100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JA-15970&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JB-15400&quot;' />
          <groupfilter from='&quot;JB-16000&quot;' function='range' level='[Customer ID]' to='&quot;JC-15340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JC-15775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16150&quot;' />
          <groupfilter from='&quot;JF-15295&quot;' function='range' level='[Customer ID]' to='&quot;JF-15415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15565&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15820&quot;' />
          <groupfilter from='&quot;JH-15985&quot;' function='range' level='[Customer ID]' to='&quot;JK-15205&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15370&quot;' />
          <groupfilter from='&quot;JK-15640&quot;' function='range' level='[Customer ID]' to='&quot;JK-16090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15130&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15655&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JO-15280&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JP-15520&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JP-16135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15880&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JW-15220&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JW-15955&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KA-16525&quot;' />
          <groupfilter from='&quot;KB-16315&quot;' function='range' level='[Customer ID]' to='&quot;KB-16585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KC-16255&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KC-16675&quot;' />
          <groupfilter from='&quot;KD-16495&quot;' function='range' level='[Customer ID]' to='&quot;KE-16420&quot;' />
          <groupfilter from='&quot;KH-16690&quot;' function='range' level='[Customer ID]' to='&quot;KL-16645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KM-16375&quot;' />
          <groupfilter from='&quot;KW-16570&quot;' function='range' level='[Customer ID]' to='&quot;LB-16735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-16885&quot;' />
          <groupfilter from='&quot;LC-17050&quot;' function='range' level='[Customer ID]' to='&quot;LD-16855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LE-16810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LF-17185&quot;' />
          <groupfilter from='&quot;LR-16915&quot;' function='range' level='[Customer ID]' to='&quot;LS-16945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-17230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-16990&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-17125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MB-17305&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-18100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MD-17860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ME-17320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MF-17665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17875&quot;' />
          <groupfilter from='&quot;MG-18145&quot;' function='range' level='[Customer ID]' to='&quot;MH-17620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-18025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MJ-17740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MK-18160&quot;' />
          <groupfilter from='&quot;ML-17410&quot;' function='range' level='[Customer ID]' to='&quot;MM-17260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MN-17935&quot;' />
          <groupfilter from='&quot;MP-17965&quot;' function='range' level='[Customer ID]' to='&quot;MS-17365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17710&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17830&quot;' />
          <groupfilter from='&quot;MT-17815&quot;' function='range' level='[Customer ID]' to='&quot;MV-18190&quot;' />
          <groupfilter from='&quot;MW-18235&quot;' function='range' level='[Customer ID]' to='&quot;MY-18295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MZ-17515&quot;' />
          <groupfilter from='&quot;ND-18370&quot;' function='range' level='[Customer ID]' to='&quot;NF-18385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NP-18700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NS-18505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NS-18640&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ON-18715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;OT-18730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-19105&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-19150&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PG-18820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PK-19075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PN-18775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-18850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PR-18880&quot;' />
          <groupfilter from='&quot;PS-18970&quot;' function='range' level='[Customer ID]' to='&quot;PT-19090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PW-19030&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;QJ-19255&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19885&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19915&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RC-19825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RC-19960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19720&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RE-19405&quot;' />
          <groupfilter from='&quot;RF-19840&quot;' function='range' level='[Customer ID]' to='&quot;RH-19555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RM-19375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RM-19675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RO-19780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RR-19525&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RS-19420&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RW-19540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SB-20170&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20050&quot;' />
          <groupfilter from='&quot;SC-20230&quot;' function='range' level='[Customer ID]' to='&quot;SC-20380&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20725&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SD-20485&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SE-20110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20890&quot;' />
          <groupfilter from='&quot;SJ-20500&quot;' function='range' level='[Customer ID]' to='&quot;SM-20005&quot;' />
          <groupfilter from='&quot;SM-20950&quot;' function='range' level='[Customer ID]' to='&quot;SO-20335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20920&quot;' />
          <groupfilter from='&quot;SR-20740&quot;' function='range' level='[Customer ID]' to='&quot;SS-20410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ST-20530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20785&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TA-21385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21175&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21400&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21625&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-21475&quot;' />
          <groupfilter from='&quot;TG-21310&quot;' function='range' level='[Customer ID]' to='&quot;TH-21100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TP-21565&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21160&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21370&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21610&quot;' />
          <groupfilter from='&quot;TT-21070&quot;' function='range' level='[Customer ID]' to='&quot;TT-21265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VB-21745&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VF-21715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VG-21805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VM-21685&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VP-21730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VP-21760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VT-21700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VW-21775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;YC-21895&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ZC-21910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ZD-21925&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.598784' group-percentage='0.0699088' measure-ordering='alphabetic' measure-percentage='0.331307' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_996421475575369733:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEDIUM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sales' inline='true' name='federated.188dia40acvc5r1aywxxt0n3w5vo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales' name='textscan.1g7s6eg0t7r3xo1bqfadp13h68q9'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Tableau/Resources/Exam 2' filename='Sales.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1g7s6eg0t7r3xo1bqfadp13h68q9' name='Sales.csv' table='[Sales#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='ORDERNUMBER' ordinal='0' />
            <column datatype='integer' name='QUANTITYORDERED' ordinal='1' />
            <column datatype='real' name='PRICEEACH' ordinal='2' />
            <column datatype='integer' name='ORDERLINENUMBER' ordinal='3' />
            <column datatype='real' name='SALES' ordinal='4' />
            <column datatype='datetime' name='ORDERDATE' ordinal='5' />
            <column datatype='string' name='STATUS' ordinal='6' />
            <column datatype='integer' name='QTR_ID' ordinal='7' />
            <column datatype='integer' name='MONTH_ID' ordinal='8' />
            <column datatype='integer' name='YEAR_ID' ordinal='9' />
            <column datatype='string' name='PRODUCTLINE' ordinal='10' />
            <column datatype='integer' name='MSRP' ordinal='11' />
            <column datatype='string' name='PRODUCTCODE' ordinal='12' />
            <column datatype='string' name='CUSTOMERNAME' ordinal='13' />
            <column datatype='string' name='PHONE' ordinal='14' />
            <column datatype='string' name='ADDRESSLINE1' ordinal='15' />
            <column datatype='string' name='ADDRESSLINE2' ordinal='16' />
            <column datatype='string' name='CITY' ordinal='17' />
            <column datatype='string' name='STATE' ordinal='18' />
            <column datatype='string' name='POSTALCODE' ordinal='19' />
            <column datatype='string' name='COUNTRY' ordinal='20' />
            <column datatype='string' name='TERRITORY' ordinal='21' />
            <column datatype='string' name='CONTACTLASTNAME' ordinal='22' />
            <column datatype='string' name='CONTACTFIRSTNAME' ordinal='23' />
            <column datatype='string' name='DEALSIZE' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDERNUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORDERNUMBER]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>ORDERNUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUANTITYORDERED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QUANTITYORDERED]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>QUANTITYORDERED</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRICEEACH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PRICEEACH]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>PRICEEACH</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDERLINENUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORDERLINENUMBER]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>ORDERLINENUMBER</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SALES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SALES]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>SALES</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDERDATE</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ORDERDATE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>ORDERDATE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATUS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATUS]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>STATUS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QTR_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QTR_ID]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>QTR_ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH_ID]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>MONTH_ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR_ID]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>YEAR_ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCTLINE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRODUCTLINE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>PRODUCTLINE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MSRP]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCTCODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRODUCTCODE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>PRODUCTCODE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMERNAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMERNAME]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>CUSTOMERNAME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PHONE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PHONE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>PHONE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESSLINE1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESSLINE1]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>ADDRESSLINE1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESSLINE2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESSLINE2]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>ADDRESSLINE2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POSTALCODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POSTALCODE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>POSTALCODE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TERRITORY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TERRITORY]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>TERRITORY</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTACTLASTNAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTACTLASTNAME]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>CONTACTLASTNAME</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTACTFIRSTNAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTACTFIRSTNAME]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>CONTACTFIRSTNAME</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEALSIZE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEALSIZE]</local-name>
            <parent-name>[Sales.csv]</parent-name>
            <remote-alias>DEALSIZE</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Addressline1' datatype='string' name='[ADDRESSLINE1]' role='dimension' type='nominal' />
      <column caption='Addressline2' datatype='string' name='[ADDRESSLINE2]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Contactfirstname' datatype='string' name='[CONTACTFIRSTNAME]' role='dimension' type='nominal' />
      <column caption='Contactlastname' datatype='string' name='[CONTACTLASTNAME]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customername' datatype='string' name='[CUSTOMERNAME]' role='dimension' type='nominal' />
      <column caption='Dealsize' datatype='string' name='[DEALSIZE]' role='dimension' type='nominal' />
      <column caption='Month Id' datatype='integer' name='[MONTH_ID]' role='dimension' type='ordinal' />
      <column caption='Msrp' datatype='integer' name='[MSRP]' role='measure' type='quantitative' />
      <column datatype='string' name='[Names with Co. and without]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CUSTOMERNAME]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Names with Co.&quot;'>
            <value>&quot;Amica Models &amp; Co.&quot;</value>
            <value>&quot;Australian Collectors, Co.&quot;</value>
            <value>&quot;Australian Gift Network, Co.&quot;</value>
            <value>&quot;Australian Gift Network, Co..&quot;</value>
            <value>&quot;AV Stores, Co.&quot;</value>
            <value>&quot;Bavarian Collectables Imports, Co.&quot;</value>
            <value>&quot;Blauer See Auto, Co.&quot;</value>
            <value>&quot;Boards &amp; Toys Co.&quot;</value>
            <value>&quot;Cambridge Collectables Co.&quot;</value>
            <value>&quot;Clover Collections, Co.&quot;</value>
            <value>&quot;Collectable Mini Designs Co.&quot;</value>
            <value>&quot;Corporate Gift Ideas Co.&quot;</value>
            <value>&quot;Cruz &amp; Sons Co.&quot;</value>
            <value>&quot;giftsbymail.co.uk&quot;</value>
            <value>&quot;Handji Gifts&amp; Co.&quot;</value>
            <value>&quot;Handji Gifts&amp; Co..&quot;</value>
            <value>&quot;La Corne D&apos;abondance, Co.&quot;</value>
            <value>&quot;Marta&apos;s Replicas Co.&quot;</value>
            <value>&quot;Mini Wheels Co.&quot;</value>
            <value>&quot;Norway Gifts By Mail, Co.&quot;</value>
            <value>&quot;Online Diecast Creations Co.&quot;</value>
            <value>&quot;Osaka Souveniers Co.&quot;</value>
            <value>&quot;Saveley &amp; Henriot, Co.&quot;</value>
            <value>&quot;Souveniers And Things Co.&quot;</value>
            <value>&quot;Stylish Desk Decors, Co.&quot;</value>
            <value>&quot;Toys of Finland, Co.&quot;</value>
            <value>&quot;Volvo Model Replicas, Co.&quot;</value>
            <value>&quot;Volvo Model Replicas, Co..&quot;</value>
            <value>&quot;West Coast Collectables Co.&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Orderdate' datatype='datetime' name='[ORDERDATE]' role='dimension' type='ordinal' />
      <column caption='Orderlinenumber' datatype='integer' name='[ORDERLINENUMBER]' role='measure' type='quantitative' />
      <column caption='Ordernumber' datatype='integer' name='[ORDERNUMBER]' role='measure' type='quantitative' />
      <column caption='Phone' datatype='string' name='[PHONE]' role='dimension' type='nominal' />
      <column caption='Postalcode' datatype='string' name='[POSTALCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Priceeach' datatype='real' name='[PRICEEACH]' role='measure' type='quantitative' />
      <column caption='Productcode' datatype='string' name='[PRODUCTCODE]' role='dimension' type='nominal' />
      <column caption='Productline' datatype='string' name='[PRODUCTLINE]' role='dimension' type='nominal' />
      <column caption='Qtr Id' datatype='integer' name='[QTR_ID]' role='dimension' type='ordinal' />
      <column caption='Quantityordered' datatype='integer' name='[QUANTITYORDERED]' role='measure' type='quantitative' />
      <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Status' datatype='string' name='[STATUS]' role='dimension' type='nominal' />
      <column caption='Territory' datatype='string' name='[TERRITORY]' role='dimension' type='nominal' />
      <column caption='Year Id' datatype='integer' name='[YEAR_ID]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.557484' measure-ordering='alphabetic' measure-percentage='0.442516' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sales+ (DataBase1)' inline='true' name='federated.0rjgp5109kryrt1bg9jyq1xa3c4a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DataBase1' name='excel-direct.03b0bsd0kkjife1f5yzxs1r80mo2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hp/Desktop/Tableau/Resources/Exam 2/DataBase1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sales].[Product Sub-Category]' />
              <expression op='[Target].[Product _Sub_Cat]' />
            </expression>
          </clause>
          <relation connection='excel-direct.03b0bsd0kkjife1f5yzxs1r80mo2' name='Sales' table='[Sales$]' type='table'>
            <columns gridOrigin='A1:T9427:no:A1:T9427:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order Priority' ordinal='1' />
              <column datatype='integer' name='Customer ID' ordinal='2' />
              <column datatype='string' name='Custom Field' ordinal='3' />
              <column datatype='string' name='Customer Name' ordinal='4' />
              <column datatype='string' name='Ship Mode' ordinal='5' />
              <column datatype='string' name='Customer Segment' ordinal='6' />
              <column datatype='string' name='Product Category' ordinal='7' />
              <column datatype='string' name='Product Sub-Category' ordinal='8' />
              <column datatype='string' name='Product Container' ordinal='9' />
              <column datatype='string' name='Product Name' ordinal='10' />
              <column datatype='string' name='Region' ordinal='11' />
              <column datatype='string' name='State or Province' ordinal='12' />
              <column datatype='string' name='City' ordinal='13' />
              <column datatype='integer' name='Postal Code' ordinal='14' />
              <column datatype='date' name='Order Date' ordinal='15' />
              <column datatype='date' name='Ship Date' ordinal='16' />
              <column datatype='real' name='Profit' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Order ID' ordinal='19' />
            </columns>
          </relation>
          <relation connection='excel-direct.03b0bsd0kkjife1f5yzxs1r80mo2' name='Target' table='[Target$]' type='table'>
            <columns gridOrigin='A1:B18:no:A1:B18:0' header='yes' outcome='6'>
              <column datatype='string' name='Product _Sub_Cat' ordinal='0' />
              <column datatype='integer' name='Target' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Custom Field</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Custom Field]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Custom Field</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T9427:no:A1:T9427:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product _Sub_Cat</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product _Sub_Cat]</local-name>
            <parent-name>[Target]</parent-name>
            <remote-alias>Product _Sub_Cat</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[Target]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Target]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B18:no:A1:B18:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Difference' datatype='real' name='[Calculation_996421475555729408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])-SUM([Target])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Product  Sub Cat' datatype='string' name='[Product _Sub_Cat]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Target]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.668258' measure-ordering='alphabetic' measure-percentage='0.331742' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='DataBase1-sales&amp;target' inline='true' name='federated.1j3zarj0oij1w011pyp7213h2dqj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DataBase1' name='excel-direct.1qanaj70yve0d417tah7e0msew2d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hp/Desktop/Tableau/Resources/Exam 2/DataBase1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Database2' name='excel-direct.0ozichk0kie9wd191rx0y1ac3j4a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hp/Desktop/Tableau/Resources/Exam 2/Database2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sales].[Product Sub-Category]' />
              <expression op='[Target].[Product _Sub_Cat]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1qanaj70yve0d417tah7e0msew2d' name='Sales' table='[Sales$]' type='table'>
            <columns gridOrigin='A1:T9427:no:A1:T9427:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order Priority' ordinal='1' />
              <column datatype='integer' name='Customer ID' ordinal='2' />
              <column datatype='string' name='Custom Field' ordinal='3' />
              <column datatype='string' name='Customer Name' ordinal='4' />
              <column datatype='string' name='Ship Mode' ordinal='5' />
              <column datatype='string' name='Customer Segment' ordinal='6' />
              <column datatype='string' name='Product Category' ordinal='7' />
              <column datatype='string' name='Product Sub-Category' ordinal='8' />
              <column datatype='string' name='Product Container' ordinal='9' />
              <column datatype='string' name='Product Name' ordinal='10' />
              <column datatype='string' name='Region' ordinal='11' />
              <column datatype='string' name='State or Province' ordinal='12' />
              <column datatype='string' name='City' ordinal='13' />
              <column datatype='integer' name='Postal Code' ordinal='14' />
              <column datatype='date' name='Order Date' ordinal='15' />
              <column datatype='date' name='Ship Date' ordinal='16' />
              <column datatype='real' name='Profit' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Order ID' ordinal='19' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ozichk0kie9wd191rx0y1ac3j4a' name='Target' table='[Target$]' type='table'>
            <columns gridOrigin='A1:B18:no:A1:B18:0' header='yes' outcome='6'>
              <column datatype='string' name='Product _Sub_Cat' ordinal='0' />
              <column datatype='integer' name='Target' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Custom Field</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Custom Field]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Custom Field</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sales]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T9427:no:A1:T9427:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product _Sub_Cat</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product _Sub_Cat]</local-name>
            <parent-name>[Target]</parent-name>
            <remote-alias>Product _Sub_Cat</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[Target]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Target]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B18:no:A1:B18:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Product  Sub Cat' datatype='string' name='[Product _Sub_Cat]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Target]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.699284' measure-ordering='alphabetic' measure-percentage='0.300716' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Customers' inline='true' name='federated.1mkzhho0x453o91di7zp51iijguk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Customers' name='textscan.00fxxlb0o7erol1dy5w221nkj91s'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Tableau/Resources/Exam 2' filename='Customers.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.00fxxlb0o7erol1dy5w221nkj91s' name='Customers.csv' table='[Customers#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Order ID' ordinal='0' />
            <column datatype='string' name='Customer ID' ordinal='1' />
            <column datatype='string' name='Customer Name' ordinal='2' />
            <column datatype='string' name='Segment' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='City' ordinal='5' />
            <column datatype='string' name='State' ordinal='6' />
            <column datatype='real' name='Sales' ordinal='7' />
            <column datatype='integer' name='Quantity' ordinal='8' />
            <column datatype='real' name='Discount' ordinal='9' />
            <column datatype='real' name='Profit' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Flag' datatype='string' name='[Calculation_996421475569909763]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales])&gt;30000 THEN &quot;Good&quot; ELSE &quot;Bad&quot; END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Name - Split 1' datatype='string' name='[Customer Name - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1mkzhho0x453o91di7zp51iijguk].[Customer Name]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Customer Name - Split 2' datatype='string' name='[Customer Name - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1mkzhho0x453o91di7zp51iijguk].[Customer Name]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name], &quot; &quot;, 2 ) )' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.525373' measure-ordering='alphabetic' measure-percentage='0.474627' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Amsterdam AirBnb' inline='true' name='federated.17e9wwr0za7ti81a0jwgf1k4svn8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Amsterdam AirBnb' name='textscan.1prjftg1kdr1aa12igxjy1totw47'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Tableau/Resources/Exam 2' filename='Amsterdam AirBnb .csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1prjftg1kdr1aa12igxjy1totw47' name='Amsterdam AirBnb .csv' table='[Amsterdam AirBnb #csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood' ordinal='4' />
            <column datatype='real' name='latitude' ordinal='5' />
            <column datatype='real' name='longitude' ordinal='6' />
            <column datatype='string' name='room_type' ordinal='7' />
            <column datatype='integer' name='price' ordinal='8' />
            <column datatype='integer' name='minimum_nights' ordinal='9' />
            <column datatype='integer' name='number_of_reviews' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[Amsterdam AirBnb .csv]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501326' measure-ordering='alphabetic' measure-percentage='0.498674' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Products' inline='true' name='federated.0t2sfry18ltdeh17t8opn0qts6af' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Products' name='textscan.08r7wog1n869a413n5fns16iy5m6'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Tableau/Resources/Exam 2' filename='Products.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08r7wog1n869a413n5fns16iy5m6' name='Products.csv' table='[Products#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='string' name='Sub-Category' ordinal='2' />
            <column datatype='string' name='Product Name' ordinal='3' />
            <column datatype='real' name='Sales' ordinal='4' />
            <column datatype='integer' name='Quantity' ordinal='5' />
            <column datatype='real' name='Profit' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.502809' measure-ordering='alphabetic' measure-percentage='0.497191' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Page    2 Table  1+ (CryptoCurrencies)' inline='true' name='federated.0nwzor7134oxm81bpqj1c1tqdgpp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CryptoCurrencies' name='pdf.007vnlj1lmw6am1cadnl31uk2nte'>
            <connection class='pdf' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='256' origfilename='C:/Users/hp/Desktop/Tableau/Resources/Exam 2/CryptoCurrencies.pdf' password='' pgFrom='2' pgTo='4' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='project'>
          <columns>
            <column caption='Date' hidden='true' name='[Page    2 Table  1+].[Date]' />
            <column caption='F1' hidden='true' name='[Page    2 Table  1+].[F1]' />
            <column name='[Project].[Date &amp; F1]' project-type='coalesce' />
            <column datatype='date' date-parse-format='dd/MM/yyyy' name='Date &amp; F1' ordinal='1' />
          </columns>
          <bindings>
            <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Date]) THEN [Page    2 Table  1+].[Date]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F1]) THEN [Page    2 Table  1+].[F1]&#10;ELSE NULL&#10;END' name='[Project].[Date &amp; F1]' />
          </bindings>
          <relation type='project'>
            <columns>
              <column caption='Currency' hidden='true' name='[Page    2 Table  1+].[Currency]' />
              <column caption='F2' hidden='true' name='[Page    2 Table  1+].[F2]' />
              <column name='[Project].[Currency &amp; F2]' project-type='coalesce' />
            </columns>
            <bindings>
              <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Currency]) THEN [Page    2 Table  1+].[Currency]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F2]) THEN [Page    2 Table  1+].[F2]&#10;ELSE NULL&#10;END' name='[Project].[Currency &amp; F2]' />
            </bindings>
            <relation type='project'>
              <columns>
                <column caption='Open' hidden='true' name='[Page    2 Table  1+].[Open]' />
                <column caption='F3' hidden='true' name='[Page    2 Table  1+].[F3]' />
                <column name='[Project].[Open &amp; F3]' project-type='coalesce' />
                <column datatype='real' name='Open &amp; F3' ordinal='3' />
              </columns>
              <bindings>
                <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Open]) THEN [Page    2 Table  1+].[Open]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F3]) THEN [Page    2 Table  1+].[F3]&#10;ELSE NULL&#10;END' name='[Project].[Open &amp; F3]' />
              </bindings>
              <relation type='project'>
                <columns>
                  <column caption='High' hidden='true' name='[Page    2 Table  1+].[High]' />
                  <column caption='F4' hidden='true' name='[Page    2 Table  1+].[F4]' />
                  <column name='[Project].[High &amp; F4]' project-type='coalesce' />
                  <column datatype='real' name='High &amp; F4' ordinal='4' />
                </columns>
                <bindings>
                  <binding expression='IF NOT ISNULL([Page    2 Table  1+].[High]) THEN [Page    2 Table  1+].[High]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F4]) THEN [Page    2 Table  1+].[F4]&#10;ELSE NULL&#10;END' name='[Project].[High &amp; F4]' />
                </bindings>
                <relation type='project'>
                  <columns>
                    <column caption='Low' hidden='true' name='[Page    2 Table  1+].[Low]' />
                    <column caption='F5' hidden='true' name='[Page    2 Table  1+].[F5]' />
                    <column name='[Project].[Low &amp; F5]' project-type='coalesce' />
                    <column datatype='real' name='Low &amp; F5' ordinal='5' />
                  </columns>
                  <bindings>
                    <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Low]) THEN [Page    2 Table  1+].[Low]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F5]) THEN [Page    2 Table  1+].[F5]&#10;ELSE NULL&#10;END' name='[Project].[Low &amp; F5]' />
                  </bindings>
                  <relation type='project'>
                    <columns>
                      <column caption='Close' hidden='true' name='[Page    2 Table  1+].[Close]' />
                      <column caption='F6' hidden='true' name='[Page    2 Table  1+].[F6]' />
                      <column name='[Project].[Close &amp; F6]' project-type='coalesce' />
                      <column datatype='real' name='Close &amp; F6' ordinal='6' />
                    </columns>
                    <bindings>
                      <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Close]) THEN [Page    2 Table  1+].[Close]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F6]) THEN [Page    2 Table  1+].[F6]&#10;ELSE NULL&#10;END' name='[Project].[Close &amp; F6]' />
                    </bindings>
                    <relation type='project'>
                      <columns>
                        <column caption='Currency Volume' hidden='true' name='[Page    2 Table  1+].[Currency Volume]' />
                        <column caption='F7' hidden='true' name='[Page    2 Table  1+].[F7]' />
                        <column name='[Project].[Currency Volume &amp; F7]' project-type='coalesce' />
                        <column datatype='real' name='Currency Volume &amp; F7' ordinal='7' />
                      </columns>
                      <bindings>
                        <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Currency Volume]) THEN [Page    2 Table  1+].[Currency Volume]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F7]) THEN [Page    2 Table  1+].[F7]&#10;ELSE NULL&#10;END' name='[Project].[Currency Volume &amp; F7]' />
                      </bindings>
                      <relation type='project'>
                        <columns>
                          <column caption='Volume USD' hidden='true' name='[Page    2 Table  1+].[Volume USD]' />
                          <column caption='F8' hidden='true' name='[Page    2 Table  1+].[F8]' />
                          <column name='[Project].[Volume USD &amp; F8]' project-type='coalesce' />
                          <column datatype='real' name='Volume USD &amp; F8' ordinal='8' />
                        </columns>
                        <bindings>
                          <binding expression='IF NOT ISNULL([Page    2 Table  1+].[Volume USD]) THEN [Page    2 Table  1+].[Volume USD]&#10;ELSEIF NOT ISNULL([Page    2 Table  1+].[F8]) THEN [Page    2 Table  1+].[F8]&#10;ELSE NULL&#10;END' name='[Project].[Volume USD &amp; F8]' />
                        </bindings>
                        <relation all='true' name='Page    2 Table  1+' type='union'>
                          <columns>
                            <column datatype='string' name='Date' />
                            <column datatype='string' name='Currency' />
                            <column datatype='string' name='Open' />
                            <column datatype='string' name='High' />
                            <column datatype='string' name='Low' />
                            <column datatype='string' name='Close' />
                            <column datatype='string' name='Currency Volume' />
                            <column datatype='string' name='Volume USD' />
                            <column datatype='string' name='F1' />
                            <column datatype='string' name='F2' />
                            <column datatype='string' name='F3' />
                            <column datatype='string' name='F4' />
                            <column datatype='string' name='F5' />
                            <column datatype='string' name='F6' />
                            <column datatype='string' name='F7' />
                            <column datatype='string' name='F8' />
                            <column datatype='string' name='Table Name' />
                          </columns>
                          <relation connection='pdf.007vnlj1lmw6am1cadnl31uk2nte' name='Page    2 Table  1' table='[&apos;Page    2 Table  1$&apos;]' type='table'>
                            <columns gridOrigin='A1:H50:no:A1:H50:0' header='yes' lost='0' outcome='2' processed='294'>
                              <column datatype='string' name='Date' ordinal='0' />
                              <column datatype='string' name='Currency' ordinal='1' />
                              <column datatype='string' name='Open' ordinal='2' />
                              <column datatype='string' name='High' ordinal='3' />
                              <column datatype='string' name='Low' ordinal='4' />
                              <column datatype='string' name='Close' ordinal='5' />
                              <column datatype='string' name='Currency Volume' ordinal='6' />
                              <column datatype='string' name='Volume USD' ordinal='7' />
                            </columns>
                          </relation>
                          <relation connection='pdf.007vnlj1lmw6am1cadnl31uk2nte' name='Page    3 Table  1' table='[&apos;Page    3 Table  1$&apos;]' type='table'>
                            <columns gridOrigin='A1:H53:no:A1:H53:0' header='no' outcome='2'>
                              <column datatype='string' name='F1' ordinal='0' />
                              <column datatype='string' name='F2' ordinal='1' />
                              <column datatype='string' name='F3' ordinal='2' />
                              <column datatype='string' name='F4' ordinal='3' />
                              <column datatype='string' name='F5' ordinal='4' />
                              <column datatype='string' name='F6' ordinal='5' />
                              <column datatype='string' name='F7' ordinal='6' />
                              <column datatype='string' name='F8' ordinal='7' />
                            </columns>
                          </relation>
                          <relation connection='pdf.007vnlj1lmw6am1cadnl31uk2nte' name='Page    4 Table  1' table='[&apos;Page    4 Table  1$&apos;]' type='table'>
                            <columns gridOrigin='A1:H50:no:A1:H50:0' header='no' outcome='2'>
                              <column datatype='string' name='F1' ordinal='0' />
                              <column datatype='string' name='F2' ordinal='1' />
                              <column datatype='string' name='F3' ordinal='2' />
                              <column datatype='string' name='F4' ordinal='3' />
                              <column datatype='string' name='F5' ordinal='4' />
                              <column datatype='string' name='F6' ordinal='5' />
                              <column datatype='string' name='F7' ordinal='6' />
                              <column datatype='string' name='F8' ordinal='7' />
                            </columns>
                          </relation>
                        </relation>
                      </relation>
                    </relation>
                  </relation>
                </relation>
              </relation>
            </relation>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Page    2 Table  1+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date &amp; F1</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date &amp; F1]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Date &amp; F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency &amp; F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Currency &amp; F2]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Currency &amp; F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open &amp; F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open &amp; F3]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Open &amp; F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High &amp; F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High &amp; F4]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>High &amp; F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low &amp; F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low &amp; F5]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Low &amp; F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close &amp; F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close &amp; F6]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Close &amp; F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency Volume &amp; F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Currency Volume &amp; F7]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Currency Volume &amp; F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume USD &amp; F8</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume USD &amp; F8]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Volume USD &amp; F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Page    2 Table  1+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Close' datatype='real' name='[Close &amp; F6]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[Currency &amp; F2]' role='dimension' type='nominal' />
      <column caption='Currency Volume' datatype='real' name='[Currency Volume &amp; F7]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[Date &amp; F1]' role='dimension' type='ordinal' />
      <column caption='High' datatype='real' name='[High &amp; F4]' role='measure' type='quantitative' />
      <column caption='Low' datatype='real' name='[Low &amp; F5]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Low (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Low &amp; F5]' peg='0' size='453' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open' datatype='real' name='[Open &amp; F3]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Table Name]' role='dimension' type='nominal' />
      <column caption='Volume USD' datatype='real' name='[Volume USD &amp; F8]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.498507' measure-ordering='alphabetic' measure-percentage='0.501493' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q21' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AGG(Rating)' />
        <param name='target' value='Q21' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Q14'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales+ (DataBase1)' name='federated.0rjgp5109kryrt1bg9jyq1xa3c4a' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjgp5109kryrt1bg9jyq1xa3c4a'>
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Target]' role='dimension' type='ordinal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Target]' derivation='None' name='[none:Target:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[none:Product Sub-Category:nk]' value='212' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[none:Product Category:nk] / ([federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[none:Product Sub-Category:nk] / [federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[none:Target:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{35DD12F9-C057-416F-B072-A7FBF660532C}' />
    </worksheet>
    <worksheet name='Q15'>
      <table>
        <view>
          <datasources>
            <datasource caption='DataBase1-sales&amp;target' name='federated.1j3zarj0oij1w011pyp7213h2dqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1j3zarj0oij1w011pyp7213h2dqj'>
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Target]' role='dimension' type='ordinal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Target]' derivation='None' name='[none:Target:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1j3zarj0oij1w011pyp7213h2dqj].[none:Product Sub-Category:nk]' value='316' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1j3zarj0oij1w011pyp7213h2dqj].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1j3zarj0oij1w011pyp7213h2dqj].[none:Product Category:nk] / ([federated.1j3zarj0oij1w011pyp7213h2dqj].[none:Product Sub-Category:nk] / [federated.1j3zarj0oij1w011pyp7213h2dqj].[none:Target:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{91855ED2-46EF-4375-AF31-3003919DF9A3}' />
    </worksheet>
    <worksheet name='Q17'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12boc3h0prlhvd17s7ybz038bafu].[io:Set 1:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{1275014A-E2D2-40CD-8E84-22DCA9EEC16A}' />
    </worksheet>
    <worksheet name='Q18'>
      <table>
        <view>
          <datasources>
            <datasource caption='Customers' name='federated.1mkzhho0x453o91di7zp51iijguk' />
          </datasources>
          <datasource-dependencies datasource='federated.1mkzhho0x453o91di7zp51iijguk'>
            <column caption='Customer Name - Split 1' datatype='string' name='[Customer Name - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1mkzhho0x453o91di7zp51iijguk].[Customer Name]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Customer Name - Split 2' datatype='string' name='[Customer Name - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1mkzhho0x453o91di7zp51iijguk].[Customer Name]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name], &quot; &quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name - Split 1]' derivation='None' name='[none:Customer Name - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name - Split 2]' derivation='None' name='[none:Customer Name - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 2:nk]'>
            <groupfilter expression='STARTSWITH(LOWER([Customer Name - Split 2]), LOWER(&apos;A&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='A' user:ui-pattern_type='starts-with'>
              <groupfilter function='level-members' level='[none:Customer Name - Split 2:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 2:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 2:nk]' value='160' />
            <format attr='width' field='[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 1:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 1:nk] / [federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 2:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D821BC67-3A41-4A33-99A1-4597847B7C5E}' />
    </worksheet>
    <worksheet name='Q19'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column caption='Flag' datatype='string' name='[Calculation_996421475570548740]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Sales])&gt;30000 THEN &quot;Good&quot; ELSE &quot;Bad&quot; END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_996421475570548740]' derivation='User' name='[usr:Calculation_996421475570548740:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12boc3h0prlhvd17s7ybz038bafu].[usr:Calculation_996421475570548740:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk] / [federated.12boc3h0prlhvd17s7ybz038bafu].[none:State:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{E94B53BE-BAA7-42AA-9476-29E429A32E1F}' />
    </worksheet>
    <worksheet name='Q20'>
      <table>
        <view>
          <datasources>
            <datasource caption='Customers' name='federated.1mkzhho0x453o91di7zp51iijguk' />
          </datasources>
          <datasource-dependencies datasource='federated.1mkzhho0x453o91di7zp51iijguk'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mkzhho0x453o91di7zp51iijguk].[none:State:nk]' context='true'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mkzhho0x453o91di7zp51iijguk].[none:State:nk]</column>
            <column>[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name:nk] * [federated.1mkzhho0x453o91di7zp51iijguk].[sum:Profit:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{B6BA58C9-2245-4EB5-9393-813A9ED6F15E}' />
    </worksheet>
    <worksheet name='Q21'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column caption='Rating' datatype='string' name='[Calculation_996421475575369733]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Sales])&gt;=300000 THEN &quot;HIGH&quot; &#13;&#10;ELSEIF SUM([Sales])&lt;300000 and SUM([Sales])&gt;=100000 THEN &quot;MEDIUM&quot;&#13;&#10;ELSE &quot;LOW&quot; END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_996421475575369733]' derivation='User' name='[usr:Calculation_996421475575369733:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12boc3h0prlhvd17s7ybz038bafu].[usr:Calculation_996421475575369733:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FA725BA7-2513-48FF-AF13-D5D5D02F4EA1}' />
    </worksheet>
    <worksheet name='Q22'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_996421475576877062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit]/[Sales]*100' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_996421475576877062]' derivation='Avg' name='[avg:Calculation_996421475576877062:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12boc3h0prlhvd17s7ybz038bafu].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12boc3h0prlhvd17s7ybz038bafu].[avg:Calculation_996421475576877062:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.12boc3h0prlhvd17s7ybz038bafu].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12boc3h0prlhvd17s7ybz038bafu].[avg:Calculation_996421475576877062:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12boc3h0prlhvd17s7ybz038bafu].[none:Category:nk] / [federated.12boc3h0prlhvd17s7ybz038bafu].[none:Sub-Category:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{DB7A143E-95D5-4832-B0D0-10C2B5267620}' />
    </worksheet>
    <worksheet name='Q23'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[ctd:Customer ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12boc3h0prlhvd17s7ybz038bafu].[Longitude (generated)]' field-type='quantitative' max='2440813.375547302' min='212521.12697784259' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12boc3h0prlhvd17s7ybz038bafu].[Latitude (generated)]' field-type='quantitative' max='7055895.0796150044' min='5911174.1440162063' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12boc3h0prlhvd17s7ybz038bafu].[ctd:Customer ID:qk]' />
              <lod column='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]' />
              <lod column='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12boc3h0prlhvd17s7ybz038bafu].[Latitude (generated)]</rows>
        <cols>[federated.12boc3h0prlhvd17s7ybz038bafu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{47AD0D37-1DCE-448D-A27B-50E358EDF03B}' />
    </worksheet>
    <worksheet name='Q24'>
      <table>
        <view>
          <datasources>
            <datasource caption='Amsterdam AirBnb' name='federated.17e9wwr0za7ti81a0jwgf1k4svn8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17e9wwr0za7ti81a0jwgf1k4svn8'>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[none:neighbourhood:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Centrum-Oost&quot;' />
              <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Centrum-West&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[none:neighbourhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[avg:longitude:qk]' field-type='quantitative' max='551393.61433351389' min='542689.34773753956' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[avg:latitude:qk]' field-type='quantitative' max='6871164.0407860531' min='6866692.47463137' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='true' />
            <format attr='enabled' id='tab_msalabels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[avg:latitude:qk]</rows>
        <cols>[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{EE560035-87D8-4C41-A389-4128D96EE1AA}' />
    </worksheet>
    <worksheet name='Q27'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' paired-id='refline1' scope='per-table' symmetric='false' value-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' z-order='1' />
            <reference-line axis-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='automatic' paired-id='refline0' scope='per-table' symmetric='false' value-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='automatic' scope='per-table' value-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' z-order='3' />
            <reference-line axis-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' z-order='4' />
          </pane>
        </panes>
        <rows>[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]</rows>
        <cols>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{B7A87A8C-2CF4-4F02-A556-645EDF703FD1}' />
    </worksheet>
    <worksheet name='Q27-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]</rows>
        <cols>[federated.12boc3h0prlhvd17s7ybz038bafu].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{EECD1FA2-9104-461E-AD66-0F5B3FA6BAD7}' />
    </worksheet>
    <worksheet name='Q30'>
      <table>
        <view>
          <datasources>
            <datasource caption='Products' name='federated.0t2sfry18ltdeh17t8opn0qts6af' />
          </datasources>
          <datasource-dependencies datasource='federated.0t2sfry18ltdeh17t8opn0qts6af'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0t2sfry18ltdeh17t8opn0qts6af].[sum:Quantity:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='minmax' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0t2sfry18ltdeh17t8opn0qts6af].[sum:Quantity:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t2sfry18ltdeh17t8opn0qts6af].[sum:Quantity:qk]</rows>
        <cols>[federated.0t2sfry18ltdeh17t8opn0qts6af].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{6D208FA0-8ED7-4746-8ACB-0FECDCA310C3}' />
    </worksheet>
    <worksheet name='Q31'>
      <table>
        <view>
          <datasources>
            <datasource caption='Customers' name='federated.1mkzhho0x453o91di7zp51iijguk' />
          </datasources>
          <datasource-dependencies datasource='federated.1mkzhho0x453o91di7zp51iijguk'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mkzhho0x453o91di7zp51iijguk].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
            <format attr='fill-color' id='refline0' value='#1b1b1b' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Sales:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='percentile' id='refline0' label-type='automatic' scope='per-table' symmetric='false' value-column='[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentile='90' />
            </reference-line>
          </pane>
        </panes>
        <rows>[federated.1mkzhho0x453o91di7zp51iijguk].[sum:Sales:qk]</rows>
        <cols>([federated.1mkzhho0x453o91di7zp51iijguk].[none:Country:nk] / [federated.1mkzhho0x453o91di7zp51iijguk].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{FE95D486-AED6-477B-A1E4-6F4768E0C4C6}' />
    </worksheet>
    <worksheet name='Q32'>
      <table>
        <view>
          <datasources>
            <datasource caption='Page    2 Table  1+ (CryptoCurrencies)' name='federated.0nwzor7134oxm81bpqj1c1tqdgpp' />
          </datasources>
          <datasource-dependencies datasource='federated.0nwzor7134oxm81bpqj1c1tqdgpp'>
            <column caption='Low' datatype='real' name='[Low &amp; F5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Low (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[Low &amp; F5]' peg='0' size='453' />
            </column>
            <column caption='Volume USD' datatype='real' name='[Volume USD &amp; F8]' role='measure' type='quantitative' />
            <column-instance column='[Volume USD &amp; F8]' derivation='Avg' name='[avg:Volume USD &amp; F8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low &amp; F5]' derivation='Count' name='[cnt:Low &amp; F5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low (bin)]' derivation='None' name='[none:Low (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0nwzor7134oxm81bpqj1c1tqdgpp].[none:Low (bin):qk]' field-type='quantitative' major-origin='0' major-spacing='500' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0nwzor7134oxm81bpqj1c1tqdgpp].[avg:Volume USD &amp; F8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nwzor7134oxm81bpqj1c1tqdgpp].[cnt:Low &amp; F5:qk]</rows>
        <cols>[federated.0nwzor7134oxm81bpqj1c1tqdgpp].[none:Low (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0nwzor7134oxm81bpqj1c1tqdgpp].[Low (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{8155636E-D883-40A1-BDF2-22B4AB7148B2}' />
    </worksheet>
    <worksheet name='Q8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - EU Superstore)' name='federated.12boc3h0prlhvd17s7ybz038bafu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12boc3h0prlhvd17s7ybz038bafu'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12boc3h0prlhvd17s7ybz038bafu].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12boc3h0prlhvd17s7ybz038bafu].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</column>
            <column>[federated.12boc3h0prlhvd17s7ybz038bafu].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.12boc3h0prlhvd17s7ybz038bafu].[sum:Sales:qk]</rows>
        <cols>([federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk] / [federated.12boc3h0prlhvd17s7ybz038bafu].[none:City:nk])</cols>
      </table>
      <simple-id uuid='{AFCA008B-264A-4095-B24B-5B8D5B410CF3}' />
    </worksheet>
    <worksheet name='Q9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales' name='federated.188dia40acvc5r1aywxxt0n3w5vo' />
          </datasources>
          <datasource-dependencies datasource='federated.188dia40acvc5r1aywxxt0n3w5vo'>
            <column caption='Customername' datatype='string' name='[CUSTOMERNAME]' role='dimension' type='nominal' />
            <column datatype='string' name='[Names with Co. and without]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CUSTOMERNAME]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Names with Co.&quot;'>
                  <value>&quot;Amica Models &amp; Co.&quot;</value>
                  <value>&quot;Australian Collectors, Co.&quot;</value>
                  <value>&quot;Australian Gift Network, Co.&quot;</value>
                  <value>&quot;Australian Gift Network, Co..&quot;</value>
                  <value>&quot;AV Stores, Co.&quot;</value>
                  <value>&quot;Bavarian Collectables Imports, Co.&quot;</value>
                  <value>&quot;Blauer See Auto, Co.&quot;</value>
                  <value>&quot;Boards &amp; Toys Co.&quot;</value>
                  <value>&quot;Cambridge Collectables Co.&quot;</value>
                  <value>&quot;Clover Collections, Co.&quot;</value>
                  <value>&quot;Collectable Mini Designs Co.&quot;</value>
                  <value>&quot;Corporate Gift Ideas Co.&quot;</value>
                  <value>&quot;Cruz &amp; Sons Co.&quot;</value>
                  <value>&quot;giftsbymail.co.uk&quot;</value>
                  <value>&quot;Handji Gifts&amp; Co.&quot;</value>
                  <value>&quot;Handji Gifts&amp; Co..&quot;</value>
                  <value>&quot;La Corne D&apos;abondance, Co.&quot;</value>
                  <value>&quot;Marta&apos;s Replicas Co.&quot;</value>
                  <value>&quot;Mini Wheels Co.&quot;</value>
                  <value>&quot;Norway Gifts By Mail, Co.&quot;</value>
                  <value>&quot;Online Diecast Creations Co.&quot;</value>
                  <value>&quot;Osaka Souveniers Co.&quot;</value>
                  <value>&quot;Saveley &amp; Henriot, Co.&quot;</value>
                  <value>&quot;Souveniers And Things Co.&quot;</value>
                  <value>&quot;Stylish Desk Decors, Co.&quot;</value>
                  <value>&quot;Toys of Finland, Co.&quot;</value>
                  <value>&quot;Volvo Model Replicas, Co.&quot;</value>
                  <value>&quot;Volvo Model Replicas, Co..&quot;</value>
                  <value>&quot;West Coast Collectables Co.&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column-instance column='[SALES]' derivation='Sum' name='[sum:SALES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.188dia40acvc5r1aywxxt0n3w5vo].[sum:SALES:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.188dia40acvc5r1aywxxt0n3w5vo].[Names with Co. and without]</rows>
        <cols />
      </table>
      <simple-id uuid='{B47183C5-9021-4A0C-8695-8084F2D7C6E7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='4' param='vert' type='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F6124806-1460-4868-8C57-AC90F29B0E0F}' />
    </dashboard>
  </dashboards>
  <windows source-height='177'>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</field>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CF137153-580A-4A99-B9A9-7BF764DB86CD}' />
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F8050977-AFCF-4053-AB43-5F8381B69989}' />
    </window>
    <window class='worksheet' name='Q14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[none:Calculation_996421475557150722:qk]</field>
            <field>[federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[none:Target:ok]</field>
            <field>[federated.0rjgp5109kryrt1bg9jyq1xa3c4a].[sum:Target:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{95D0F520-A027-4F55-8299-863E1B9C6DF0}' />
    </window>
    <window class='worksheet' name='Q15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{654BBC5F-2E84-438A-9744-F064B837A227}' />
    </window>
    <window class='worksheet' name='Q17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{63F238B4-7943-4AE6-BCD7-7AADF7365DE5}' />
    </window>
    <window class='worksheet' name='Q18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 1:nk]</field>
            <field>[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name - Split 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23CA214B-40E3-44D6-8A30-4DC2556BF404}' />
    </window>
    <window class='worksheet' name='Q19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</field>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:State:nk]</field>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[usr:Calculation_996421475570548740:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{41AC6812-3C70-4A74-A88F-B92A40AE67AD}' />
    </window>
    <window class='worksheet' name='Q20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mkzhho0x453o91di7zp51iijguk].[none:Customer Name:nk]</field>
            <field>[federated.1mkzhho0x453o91di7zp51iijguk].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7D14E19F-7C03-420E-8652-C434A776C6BF}' />
    </window>
    <window class='worksheet' name='Q21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12boc3h0prlhvd17s7ybz038bafu].[usr:Calculation_996421475575369733:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{368805AD-6AD2-403F-80EC-DEF7341AA499}' />
    </window>
    <window class='worksheet' name='Q22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{565450D4-BD26-4919-9C6C-82DE797D4C39}' />
    </window>
    <window class='worksheet' name='Q23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Country:nk]</field>
            <field>[federated.12boc3h0prlhvd17s7ybz038bafu].[none:Customer ID:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{47E5121C-B5D4-4E50-8A18-913262A69B12}' />
    </window>
    <window class='worksheet' name='Q24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[none:host_name:nk]</field>
            <field>[federated.17e9wwr0za7ti81a0jwgf1k4svn8].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6F4E34BF-D990-4F01-B1CC-2AAA302C6EC7}' />
    </window>
    <window class='worksheet' name='Q27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D78344AC-67A4-46C4-B8CB-29D61367BA43}' />
    </window>
    <window class='worksheet' name='Q27-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C5992BFE-0BA4-47FE-A24A-4AFE6C66AB3F}' />
    </window>
    <window class='worksheet' name='Q30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F16725C5-6753-4A8E-82F4-3F865D56C852}' />
    </window>
    <window class='worksheet' name='Q31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6B14C21C-E483-4EA7-A246-8EC4FDD42FEC}' />
    </window>
    <window class='worksheet' name='Q32'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nwzor7134oxm81bpqj1c1tqdgpp].[avg:Volume USD &amp; F8:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{746059C6-EEC4-4184-9B58-E975474B20B6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{91814BA3-A73C-4CC3-8D49-EA0C3F4A1ADB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q14' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q15' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Q17' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q18' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q20' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deZAc12Hf8W93T8997TEzex/YA7sAiRs8sABJgCAFUiJFyqJ1WJKt8lFO
      YrtUiRIncaVcsROXq1RRUpVKHB9xLFlWyaZNSqIskuCBiwRx7+JaLBZ7n7P37O7MztFX/tgV
      CJAASC6xB7bfpwp/YLtn5s1M/+b1e/3ea8myLAtBsCFJkiR5pQshCCtJBECwNREAwdZEAARb
      EwEQbE0EQLA1EQDB1kQABFsTARBsTQRAsDURAMHWRAAEWxMBEGxNBECwNREAwdZEAARbEwEQ
      bE0EQLA1EQDB1kQABFsTARBsTQRAsDURAMHWRAAEW3PcaWMikSCXyy1XWQRh2d0xALquo2na
      cpVFuAeMjIwQi8VWuhh3zR0DUFhYuFzlEO4RY2NjlJaWrnQx7hrRBhBsTQRAsDURAMHWRAAE
      WxMBEGxNBECwNREAwdZEAARbEwEQbE0EwDYsMokhzh95m1Otg6QAmKKtbYhMRgcsjFyS/oun
      6EqYK1vUZSQCYBOWlmK0v5XTZzoZ7I8zB8A0nZ2jZDI6lmUx3Xuakz0arjsOkFlbRADswDJI
      TY3Q15uieEMd+c4P72Kmezl1eoaanVsp8dvnsLDPO7UxM5dmrPsCsyXbWB/x3uJLz9Lx1iG0
      +/awMeZFWoEyrhQbVXY2ZZnMzbRxfqiCRz9bSPLS8M3bOw7y349NYtV9jm8/lYfzhqNf0zR0
      Xb/56SyLZDK5DAVfHiIAa5xppGh7u5XYoy/gtTQmNR1dN9F1A1MB1u3jd75STufP/4YjXTv5
      bJ0LeSEEDocDh+PmQ0SSJHw+3/K/kSUiArDGmZPnOX6+jfj5P+YVLIxcDs2UuJS0eO7xYpAd
      qM4QO7/4LC//4CdcKniO+wucSMwf7Ldyu7/fi0QA1jhHdDe/9ye7F/6Xof/cBXqmFRr2bidC
      DxcWtsi+9Tzx9BivHj5L5MBOinwOW7QFRCPYVmTcoTD5BSHmO4I8RKNBVFVGkiT8sW08VDlL
      13Aaa4VLulwky7Ls8l6Fu6ClpYUtW7asdDHuCkmSJFEDCLYmAiDYmgiAYGsiAIKtiQAItiYC
      INiaCIBgayIAgq2JACwrEy2bZGpshutrbpsZpscTpLIa9pmHtXqIACwrjamBCxx+6Qyjv/iT
      EefEj49wcSiBfqeHCktCDIZbJqYxSWfzFa51nuXM6QzS9iBxgGwnJ1sG2f7wDtuMv1lNRACW
      iWnEaX79TZonBugZ0cm9rhEG0HOwYSfrIiHxZayAT/yZW5kEw8NDJH211Effn1w6fukYg5Gd
      bIq6WUPDxe8aWSlm24EnCfWe55SRZeuB3RQDKC4KSiooKfChrHQhbeiTtwFkg5nEGIM9o7x/
      75gpOi6OossmenaUcz9/nWuzt3+K6YvHuJBYZIU/3cfJs820Dd3hBVYhy5pjekylZlcTTU0N
      FCzMtnJIBtPDY0xlchgrXUgb+sQ1gKQGCHuCjCUGGM+VUewEJrro9lbzGZ+Kogap2rIJ1X37
      58iODTAWtWAxUy68BdRW+1Hdd3iBVcjUhzn/+gVq60pofvvHXHv7xq11PPdvv8bempioBZbZ
      Jz/tlFTy8zy4JqYZndQpLnIw0d2Nq/Rh3KoDPTfGlSOXKPtKMQErw/CVk7x18B2uTVvk399E
      41QL713tZebNVo74QlTvfoFvNhUy0HqCN98+Sfe0TMmmvTyzfwtFARftr/wEY/cG+v7xDeKh
      bTy1v4DurhlCZRvZ4NXpOfozfnq8lfG0RbhiG0994XM05q2+zi2HcyNf+P1a1DyFxv90Pzff
      etBJsDAPdYXKZmeLaHdJqAX5qL2TZIZH0WM+uvt8rNvlQXVIWDmducQsGhYz/de41DFG9VO/
      weeLXcxkDMLenTS8+zKX1z/Po1EFWXWQ6L/E5a4E9Z/7TZ4vNOg++ipHL8Z4ZkclqfE+Lr01
      RfThL/DLdQV4ZtppnUvj1kzAgbf6Qb604Qk8qsXkyDlaTvfS8GT1KpvO183BP2un/l/uJTTU
      xuXTOTY8t4PoShdLWFzHg+TII+qQ6ZobZmxUptdfzB6XD1Xihl+2FOPTKRzuRjatjxEAAsGF
      LaoDp8eL1ysDSYZSWVRPA/fXRggAW5o2cvrIOIZWiuTQKX34S+wv9Xy4IKZJdrSZn7/ZTPdk
      GkN2Em3wM031fA/LqpHg4s/fJvfcZmr62jh3eI7wvnreP4lTcHk9OB3yKgvu2rfInjeVSLGX
      a51JulsShIs34PR+cLkxBVV1IElZMjkDvyphGBayIgM6uayJZUmAhCJLWGZmfj8HZFJpZEcI
      JJDlKKW3OvgBZi7zzrU8nvyN36cyLDE2eJojhxb3jpZWI01PT/Hnf/JdYp4p+jp1hv/n4A0h
      Leexb3yWneUF3GLRNmEJLbrr2VkYw9sxTFt3mk0NHrzOD/52uckPh+jvv0zLaYmioEJOzaOh
      qgin36K/pYVLqSD+giIKwyHUnsucOy1T7DeZ6BikqKYO1fkRxZO9BAMzjPdcI+nIMTk6wAzr
      FvuWlpCbB3/rO0Qvn+PMe8cwkzpV69aRf317hDy3Ki7Lr4DFX3tR86iMBBmrC1MYCKIuHP+y
      w0dxfQUBJHyxShoyc5w9c5GzHRBYt5PaColwQxNVvcc5c85D+ZY8qhuqaGyY4+y5y5xLyRTU
      bOXh+ghuh0R+dfXNhXSFKIqp+HwOCNayrWyAoxfOkVMLqNq8kU1u36psTMpqiJote4hVrOO+
      7VkiG2NIqRxOXxC/14Uizn1WhFgVYpmZuSRDbSc5euIKI8ksDn8RjQ89wkMNpfidq78OEKtC
      CJ+CQWr8Gu++dpDOTJiyinLCmU7eeO0418ZT4kLYChDDT5aVzszkMGMTlRz4j19mZ8iBPn2a
      v/iTkwxPzrChJCAuhC0zUQMsM0kGixSZzPxJv5TJkMLi+oq0wrISNcCyUsmP1lJdfJD/+4f/
      gTdK3GSG+sg1fJHPR/NXZeN9rRON4GVmmTrpmRG6OzroG5zDW1pBbW01saAHxz1QC6y1RvAn
      Hw5tmZiGiSUpOBQJsDC0HLql4FQVJEla2McARb2pe88yNHQUHLJs0yHTGeLXjvPWT5I8/K8/
      x2e2ApKEJK2tJcfvJZ+8DZAaofXMWxy5Mr0wgylD66t/yX/74Tsk0joWFtnpcc6/8SrtcyZa
      Zo5UKo1uwtS5F/nxuRHmtI94jTXLiddXgNt7mfMXx8kY5vyPhWliWtbSzAizrPlaZ3aK8bEx
      xsYmmE5l0E0L0EilshiGCczvl0lOM6fZ56Tgkw+H9vrw+MM4psbJEsatDTOk1lGfnmRE1wlb
      MtncOBPZGDt8GmOXLtGbdFOzdZNocGChBgIUBv28+/KfM9m/m/qwAoSo3lxHSch713uBLCzm
      4lc5+d4JLvZMkrXcxOq388jubVTmxzl8OEFTUwOhkIv0RBcnjrUQavoltsfs0R/1yY9J2UNA
      9aAaEyT0WgpGRjDC1TSUnaV3ymC9T0ebGWI2fyN5OHCW1FJvKQRccOOdpUw9xUhPD6NJHcnp
      p7ComFi+B2tukqHBERIpDdxhKqrLCbssMulpxodnMfQk02kdNVREeXEhPpdyDw0gM0hN9tJ6
      vodJYPLIz7gCQA2fLS8htgQBwLJIxvuR1j/Fr38+hiszxMn32hnuG6M0/4bdtAQdzS0kqx7j
      MZsc/LCoXiCVgF9FdkwwMa0hDc8RzC+ltDBMc88sZnGY9MgkgfIIkGO0vY1Bw0dj0+abDlRt
      9AKHj3VgqhK4C6hT/BT6s/RcbuHitWHShoUpKfRP7Wbfw1ESo60ce60PX1RhNj3DrFTJo3sf
      or40eE/0nZv6LL0tZ2mf0Kh/9kvsq6mnpjR8fQjJkpFkIlueZK8sAxa6ouIP+pC8TiTSCzvp
      jLedoF1rZP+WqK36xhd1VuIJ+XCoDlITcXIzLvKjLnxF1bhP9zJruBiJK5RsdQC3P9k3s9NM
      GwHu21RLrLCQSEEYc+IiHRMKNbueYWOFH2PqGj978V36tjxPUHLgi6zjgSe2EPHOcubwVUwt
      g8m9EACTwff+nv/343bMsB9FM1AvdvGZZz/LjorAktZgkiTNN7Atg3RihJ7ODlLuGOuieaik
      YfwqR9/uJDENDzy/kfANR79hGJjmh1crymazS1ji5bW4+QCeAB5ZJTnSTlzNp9HpR3X5qDBb
      6JzxMZArYZ/3zs+hFm/l4bqLxEf7aB8aYKS0jnXeWeRAmPy8IKosoRbUUeV5jfE0BFU3/oIw
      RSE3oOF1qzjumZ+qYY7/6Diez/wuL2zJw5y8xpE3Wjh/roeGivsJLPGrW5ZOcrybK5dHUCIl
      1FZUEg0sXHWQHbhcLmRjkszH7JxYSz1Wi2uXKn7y3Q5Ge7pJlhXj9LmRUKgtm+ONC71YxTs/
      8kuVMgYF9z1ElZQk3t5G38Qw6UgeRscYI6OTFPlD6GMXaEuVs8sH3NM/OnH6usvZ/Zmt1LqA
      Ug8TV+O0jk+SgqUNgGWRTQ1wqXmEcH0dFaVRfDeed+XX8GBTHdrAEd58+z1izzfNz/MGFEVB
      UT5cvzqda2fWwqInxOSFFKYmNMxSB17v/IeUV1vC8F+1sv4bBz6yWtfTwxz/55cYmtFQfFE2
      7NxNNFaAsyLB8SM/4t1XcuAtZNOeA5S5YGJxBV0lDLRcir5LZzkLwDRdg8PEZ7JcOOtnED8l
      6yuJ+t13vxfIMpltbyYRfZTtlfl8aNoGAAqF63ezI3mYd9/p4tl962wzMWfRV4ItLc3MTBo8
      PvyehfHseoqxsRSewih+FcAkN5dBs2RcPjdSOkHS8hHwqKDPkZiaJqNZSKoLfzCE361g5uaY
      mU6SzhlIqptwfh4eh4WmZclmFfx+J2CQSWWRVCdO571wO89mvvuFP+VM0LNwYJnk0hk0U8Hj
      cyHTwAt/8GvsryvCdZdf2TQ0zv7tv+fvrwUIXD/6o2x76kkefUDh2D+/3w2qzQ7RfPQwU9Wf
      5cmN4Vs2htfalWAxFGJZaMxNz5G77UftwO334HLc/S5dy7LQMkkyN13cUnC6XTidElrWRFUd
      yPL8vkYuiy67cKm3np+81gIgrk0tCxVvKMRH9AssCUmScHoCOG8zrdrlUm7a1+Hy2OqC5T3T
      jyIIS0EEQLA1EQDB1kQABFsTARBsTQRAsDURAMHWRAAEWxMBEGxNBECwNREAwdZEAARbEwEQ
      bE0EQLA1EQDB1kQABFsTARBsTQRAsDURAMHW7DT906YsjOws146+yItHOjALN7D3wFM83FCI
      Sj9vvTXDzp21BINOtNQElw69Tnrrl9hVao9DQ9QAa5xlmcz0HOXYUC3f/Hd/wG89XspE22na
      hjUsDDIZDdO0sAyN+MWDnHc38UDJ6l9s8m4RAVjjLNNkuK2bqr27KQv6Ka5vpKTQT3ps7Ia7
      UlqkR87xTnsZT+2twrGGlj78KPao5+zMgvRcmOLihV91V5B8l5tZK00WBeYm6OtpY/h8K1UH
      fhUbrYwOiBrABgxMQ0G5/k1LSJqGpuvzNcBkJ+8dO8ZlPUqZz36Hg6gB1jwHLneSxLQF+RIY
      WeZkGYfTiwsDyh7gS001TDa/zIkT1wg8Vk94kUdFS0ec4YnkR++4QjbVRCktDN70NxGANU6S
      Ib/Uw+WWbjbuLkce7yOemKUgEkJlcmEvlaqHn2D0rROcvhxi7+bYog6MN8508c6FvrtZ/Lvq
      Wy889KEA2K/OsxlJkims20nB+HF++uI/8JPDVzCCpZQX+2/68iVXEZsfaEDqOUVzX4oP3xZj
      bRI1wFonSbjyanhwt0JPfAY8eRSXllLolYEI27aF8HpVJAlc+TXseMDFrOteWHH77hABWPMk
      JEUlVFLH5pIPbvNRXOy7/j9ZcRIuXkd4Wcu3ssQpkGBrd6wBxK0DhFu53XEhLfxbvawPlf2O
      N8jo7OwkmVy93VrC8tM0DVVVV7oYd8WWLVvEHWKET2at3SFGtAEEWxMBEGxNBECwNREAwdZE
      AARbEwEQbE0EQLA1EQDB1kQABFsTAbANC1PPkkwkmEllFybEa8zNZTFNC7CwTINMaoa0bp/B
      ASIANmGZGpO9zfz4L/+Klw9dWpgLNsihQ1eYmcliWZCe6OS911/l8rhdpsOIANiDZaElJxjo
      j2NGGyj33WIXfZrOlmZmKh9jW5F9loYQAbABy8gyMdjBiFHCpsYoHx7LaTDRdoKr2UYe2Rqz
      1UEhZoStdZZFNjVIZ0+Gsh1bCfa3Mnvj9vF2jh3qIpEw2fH8feTdcPQbhoFpfvh0KJvNLnmx
      l4sIwBpnWTmGLl0mV7aL9REHw/0f2EGWcagqGFPk9I/3nNIaWjlOBGCNM6ZbOfT6KSZLxug+
      ZTA3mSCpSQyrHh7b6oX8Wh5uqiPXf5i33j5B9LldFDvnH6soCory4faA0+lc5nexdEQA1jjZ
      W8HeL3+VDAAaYx1djKRk6muKCDhnFvZSiDTsZnvyCMff7eaZvdWsnUP8zkQA1jjZVcC6DQUL
      /8vQn8kiTyuUFufjYeb9HR1BqjZuY/LoUQ615vPEhpAtGsNiSqStWBiahmFKOFwqMjqZjIXT
      6UCW5ye769kMuuLGrcq3nOC+1qZEihrAViQU1cn7Z/UO3O4btkoSqtt7i27StcsOtZwg3JYI
      gGBrIgCCrYkACLYmAiDYmgiAYGsiAIKtiQAItiYCsKw0EvFW3nvtPOPX/zTMmTdP0j46w8cc
      jCncRSIAy8SyLEwjx3S8g3OHrjBpGBiGgWEluPrGGdrj02grXUgbEkMhlomhXeGl77xI88QA
      Pdd0ev60c/5WRKk4ralaftPnsdUQhNViUQHQsymmZ5Io3jyCPud8NaInGZ2RieR57tKEiQyT
      ozkCkQDqWpiAIbkJx2JEpCSTQzqRWIx8ALWO3Tua2FFRIH6NVsCiPvOZ/qu8+eZhlE1Ps3/n
      esKqBIkWfvCah2/9yrY73CZHY2pkFndhCLeifMTtdHp5/e962Pt7TxC1NJJTI8y5iigK3pu/
      k7ISY+uTz9Kgd3M6lKDh+Ycour7VgYSJxUd9JsLdtsgfnQDlRUH65+L0x0vxlwc+5hPN0vre
      BcqfeIhy38dfecDSs0wOdTIWzr9nA2BonRz6/lVqfn0dktnF2z/sumFrKQ9/cR+bi8PiNGiZ
      LTIAEt5YJaWWwejQICWRegqub7PIpcfoOt/G4GwWSw1QWlNHdaFJ96UW2ro7GTw8R7vHS8Xm
      PVSoI3ReukY8lQNnmIr6eipjIZw3NM8lWcEfjiCHfYBBenKYzo4uRmY01PxqNm+sJOhUWM1n
      SrIcomx9KQFZxe3zcfPKJG6c8iou/Bq2+NNOOUhljZ/2s2OMTpQQcv1ig4WhzzEznZ7v1kuN
      0N3rwe+MYFnzd+mzTAvTNLGw0LQ5Zmcz8/vODtLe4yfo9xELvP9SZi7FSMcZRmo2Uq5O0N/f
      T3w6h2mZGMMXOePJY29DGGnVnkBM0H5ijvUvPIgnMYK8Yz97NlUQ+OgHCkvsU7W7nAXrqA8P
      cmlwhOKSXyyfISHLLhwkmRxNkplLMBo3iZVUsf2BHUwNOSnf9xDlPjcSBnNTTmRzlonxFNnU
      BMNjLmoqK24KwI1So71cOneCvnSAkFdBn+qjd7qKR+vDyKt2PacBjvz1EbY/WE1p/ArvvZoW
      AVglPl3Hg+ShuLGS1td6GfRrGPjA0Jjru8g1o5iGzUEcuTgtfQboOh+6i2wuTaL/KgNyGRu2
      +FHSA5zsVZEM47YvmU3reApK2VTSSMQFsIOHgqXIq/qKRhEF/nf46+9INHritLVoJH6UJHJ9
      e4RN+x+gvvDjtqWEu+VTf96OQDXb113l9bZJsrlCsEy02Umk6E42bPCQ7ElwvivB9eWVpkcZ
      TmqUeR0YOQ0tnUQtfoANDSqJa3EsXedOK1P6Ax4s3YHkjVLXEMWhTdE1kPu0b2OJRXji33wb
      z4kLXGoZZSqp09fZecOU9BzlTbk7vm9haXz6HxzJScHmrURP/zWnlXpQVNyltWg//C5//FMP
      ZTWlyL6ShRcKUdNg8Xd/8af8zArx2Ne+xebCCJP/+B3+6KUA1XVF5BwV3OlMxllcz/2VIxz8
      +Z/x5g9yKIEiGvc+T201q/g25TKhyu08WVTPps3raTyVY8NzO4he367gFhfCVsSiVoWwTBML
      kORfrBxgYeg6JgoORWJ+KW4Dk4VVxCQJWZKRZQnLNDCM+cfLigMZC8Mw5p/vF/vKMrJkYegW
      siIvvKaBJTlQZAvLNK8/B0hIioIi3Qsrls2XXcvMMjbUQ9fADIGyGtaVxfC7FORVX36xKsT8
      A+UPLpkhoTjUG365JRRVvuUvuSQrOG5qrUo4bnkCL6HcUDrp+n+kWzzHvUOb6efIj/4X33s7
      jivkIJPIUvz4N/mdLz9KZdi5eiuxNUq0uZaVxmS8nau9Ib7xnf/Ck5Uusr0H+c7/uUp7/H5K
      wkW2WZFttVjVfSdrj4mu5cCIEY3Mn/GrkSgxA3LanRv/wtIQNcCycuAPRQgH3+HNl95gqtxJ
      rv8sncEiNoX84stYAeIzX1YOgtEGHnr8AQ6eukLziIns8PLA4w/REA2KL2MFiM98WWnMJuJM
      zFTzzK/tQZnWUEMhwgEvqhgLtCIWFYBkvIOz7x2ifRwkh4dI7VZ2baun0Kt+xIA0k9RgC0ff
      vczgjE6gqI4dTTvIz00wNQMldaW47/Twe56Elpqg/fwZMvf/No9WiCbvSltUAHJJDdldyP17
      GgnqaSa6mnnlkMYX9t9HyO24bVeeFj/HK0d6idRsoinoQMulmZtO4jGmmZyAaF3pp3gr9wKZ
      QLSaxo2dtB5+jbNNu6kNK/ziQpjTsQTzASwLPTPJ1ffe5J3Lw2SkEDXbdrFrez35rhFOnEhy
      330V+P0qejrBtVPvkm18ii3Re7Ob+ZNa5CmQSiC/hOKGBqKmTq6yCOlnBzk/VscjZY7bXJGd
      o+PsAAX3b2Pn+goCqoSpa2iWyeQHb9uzZuWYHDzBy3/2Q05ndNR/+B5uBWAjX/+v/4IDDcV3
      vQa0LIP4mde5aNTz2Od34UrHuXS1h/aOMNs3ZpiYSKLrJpZpMnntCKdTtTwftk/n4KduA0iy
      A1egiJ0bvXyvJ8meUjep4Qu8+k8/5exAjoKGXTx1YB8bYmP06VEaYxH86vzYfUV1oZAFK8tY
      RzMXTr9EZ/8s3g0H+PpzD1MedpMZPsOLf/sylydkYo1NPPXMPhoLpjhxYoxSf4pzxw9zwvUY
      f/jLZbzzT0eYsUa42BpHy29k/+eeZndjFD1+ntd+8nNOdiZwx7bxhV//JaoyA7Rd6ib6yF4q
      ncBcOwdPZdh0fx2xAs8SXZByEa05wO9//9EPrADhwBPw4brNoz4VSSG641k+r7hxqQqSFSYz
      e5WMleHGIYdmqo3DJ53s+Vojfqd92iN3qREs4XQ6SKUzGLkkV09doezZ3+HJMIy1XqCv8zL5
      DheTkowqyx9uJ+gZNCWPbc/9El8rMml+8RjxdJKiYJJ33u5m6698m+d8OkNXrzJ47jyF+0vR
      Zjs5dCpJ7We+yX+ujSBp/WRnpgk++hW+/eUQo2eb6Z8YYlrPcvnsFNV7v85jXw6SmTjHGz89
      TcUXa/GHdK62jlG+uYDxtn7chetwB5aiFWKRmWjlpf/xXX7cPoc7XMWuZ77EF5+4nwLX0k+D
      VN0+nIBpaswOdzOSzlBYFMHFKOhZUqkxrrx5mIKnf5sq9/vlud0omVvdOfJedZcCYJKe0wj6
      Peh6F+ePt9B9/hoHF7YWbXqcmo0xCq1psoaBZXFzCNQQJdUhastDOIHCAhezKjDbzvlzzbzb
      0brwpbgo27Sb+jSQ87Px8Qe5ry6KUwZNV/BEN7J5YxE+wB8IEdQ0GBvkWscJek8eRlEkQCFQ
      8AAJbx7RglKm+zoZnsvRN+0nVh3C71yKaTVzHP/ff8RrPM1vfasGfeACRw7/I6/4wnxtb9WS
      DoKTJAnLMtFzswx3tHF1YJaiTU00Fi/Ucn3v8jdnE+iVe/ndwpt/nAzDQNNuXqzFsizS6fQS
      lnh5feoAWKbG3NQgJ9s0Gh71Icke8tc1seerB6gJOMHIkdNBUU1ynnNcGRgmGPSQ55bRcxly
      5h3G4kkOAg37+MZXHyPiVbB0jZxhojgn6QkWEAl4cH3U6aqiEKxp4qsvbKWu2IdsGmTTWWQc
      OAr9OIeHuXq8DTMYoSy8VOPxO2g5U8nXvv+r7A8BuXX4tNe50tPPJFXEluQ1F1gWhjZNT+tl
      +hM+7n9kHzHPDR/aun38q69XM3T07zjU3MBTO4vxLrR/HQ4HDsfNn4gkSfh8t7jV/D1qkd93
      jql4F+OnZYJWjtnhfuKRLXyu0I0qlVBZ9g4nDh1nstiPbOVQgmVUVlZSvaWa1iOXODkzRoHP
      gWlZeIvqKLzdywRr2ez+e9446qa20IVkmLhCMcprPkH3YX4l1Rzm4tkcE9EgTgmw/FQ/2Ehh
      IEI0NEhHaxeRXevIW7IJ91kyc26sdJx4GmCauUyObGKckXgcCyf+/CBep+Ouj02xMEkOXaR9
      PMLufY0Eb9m546Jh/9MMv3Kc5sLHeag2fMch6WvJogLgDnnxuiW6OzuZUNwUVG3nwMaq+Ynp
      +GnYtY+5Ey30do/h8OZTVeDC7QRH9D6e2CNz8vRVukctfJEqNuX58eU0ogrXTwVCFRW43G5k
      /Gx7ei/p45fp7TJQ/RGqIz48ipOSkkICgfeDICs+ympLrveiePLzKTQM3I4om5u2o59ppa9n
      HMkZpKy+HD8AToIeBW9ZIfl5MXxL1vkh43AOcOgHP+AiAFnGewZJZD0kftCJh3L2fOVJtpbm
      3f3BcKZJvOUEXdo23EeGF/7oo6S+luqy93eTPBU8+Mgkh0+cpj24h4ao2xYjU+17l8jsLIMd
      zZy8Ok1h9QY2bawhvGTXpeKc+qd36NZvN9UzyqbHd1C3BFMiLdNgoOUgF4ZvbKbhUC8AAACO
      SURBVLgGqNjYSF2VSv+1DOXlhbjdCqaWYby3jQlfAw3Ft+4JW2vzAewbAG2OsYEOumbcVFZX
      EQuKsfgfx1oLgH3HAqleItWbbpiYLtiRfS75CcItiAAItiYCINiaCIBgayIAgq2JAAi2JgIg
      2JoIgGBrIgCCrYkACLYmAiDYmgiAYGsiAIKtiQAItvb/AbvfBnjJ2nCsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q21' width='164'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q22' width='192'>
      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
      4ruP3e4Q8y+JJiWjl/lqTwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q23' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q24' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q27' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q27-2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q30' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q31' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q32' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAS7klEQVR4nO3dW3Mb93nH8e/ifCJBAAQIipIsUpYoydbBtF1LmSR26ySNk047nkzbmV70
      otO+D7+PXrczmc502jSdVFGsyLEd6yxSpERS4pkUCZIgQRJnYA+9oOXIlkRhscSK1D6fG5si
      HvwfEvhxd7GLB4phGAZCOJTrZTcgxMskARCO1vIAaJrGTntZhmGgqqrp+222Dmi6TtM0dF23
      rQ6a71VV1R1/761ac7/V2bIFeNED0ewD1Wxds09GwzCaWrPZOmi+12brXsaaL7NOdoGEo0kA
      hKNJAISjSQCEo0kAhKNJAISjeazega5r6LqBy+1GMQw0XcftdqMoym70J0RLWQ7AzNgQi9kN
      /PFeIrUlMrkCXa+/zanXErvRnxAtZTkAPT09LK0X6WjzUy7G+eDD8wwNDqMfiqHr+jcnHZ63
      RTAMo6kTGt+tU1WVSqXSUK2mabjdblwuF6FQqOE1H69ntt9m62C713q93lRds1thK2vutzrL
      AVACUc6d7ufeRAavR0GrVzAUL4qi4Ha7AXC5XDsGQNM0PB5zrXy3rlgscmsdDBp50LdrUu4S
      Z9rbG17z8ZPK5TJ36NRsHWz/nGZ/N1bqXsaaL7POcgBmx4dYzFVI954kqmX5/IvrnHr7wjdP
      +O/+93ma/Wv1ZJ2BgqGYeZIpTa27G73aUfcy1txvdZYDcOzMexz75qsU6d5TVu9SCNvIy6DC
      0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEk
      AMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRLE+FWF2YYGxykYP9Z/AX5hhbWOe1Y2c52hPb
      jf6EaCnLAfC3JblwPsXw+BJh4Hvvf0BAxoKKfcJyAHxunbGHS/T3HyMzMczVK5eJ9Rzn9OsH
      XvgBeY81erud6jRNA9ym6g3DoFarNXx7XddRFOXrtRrXbB1s/1xmenyyrllW1txvdZYDMHTz
      Gt7YAZZX1jDcXmKxKGqthsvlwuVyvXAsoGEYKIqC1+s1te536x6PYTRDURR8Pl/Dt1dV9Vsj
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dR3AcWZrff1lZ3jsAVfDek2CT7KZpds9Mz/TManrkQhEKRei0CkUoYs57
      0W2Oe9BJB4XmtLEHReiy2tWutGaspqcdHUiCJAgSIOFdAeVtVqXRgWw2UZWgBUmA9X4RiEBV
      Zr18+fL9n/ne976UDMMwEAiaFMvbzoBA8DYRAhA0NUIAgqZGCEDQ1AgBCJoaIQBBUyMEIGhq
      hAAETY0QgKCpEQIQNDVCAIKmRghA8FJUKhWy2ezbzsYrIwQgaGreigC0apErX33O9bkldOGM
      KniLWN/8JQ1uXLnCwHvnsaplDN0gl0uhW134nDIVpYpFtqJUKuhYkIwaDk8QWa+QzZcJhCMY
      1TLFUgmXN4AsgcNhQ1FqOBz2N387giPNWxCACo4Qcm6dL+9scG68jX/4zWWqVi+fTMaYzVg4
      1Wnn4nIVdzmBNxZH15N0uIt8ee0O7SPn8JZWMbx+qrVtvFadnq4wyzknE73RN387giPNWxgC
      WdHLaYxgJ71tPqr5DC2DJ/nB2RNYbXbGp04Q8TrpGZpgqK+LobEpvDaF3azO2TPvoeSzeAJt
      TB5/D59Toi3s4uvrS/R2hN/8rQiOPG9BABIn3n+PO5e+oGR4CPdOEZd3WdvN4Y22E3RYwB0l
      5rMSaInhtEAs1kFHPMDabpWRgU5aYm3IQCwWw+G04Qm24raK+bzgxZGO9pZIne31DbzRGB7H
      WxjNNTGVSgVFUQgEAm87K6/EGxfAu2I/bnZUVUVVVZxO59vOyivxxpvNUqlEOBzGZrO96UsL
      DpB3pQcQA2dBUyMEIGhqXl0Ahk4+kyKZyaEbBsVcmnSuiIGGoqjoWo1KtXYAWRUIDp5XngMo
      +RQLS6tUykW6O7tZWNrAKlUZPj5GYrWG35bECPXQ3SLG/ILDxytbgQzDwFAr3J6dI2B3Q3sn
      /kqKVE3hzte3iQ5P8P7xQQxdQ9d1MpkMHo8Hq1WYLY8yiqJQrVbx+XxvOyuvxCvXQqOaZ2Zu
      nbFj71HbnGe1qODQylhtTnpGp6gUt6mo/bhtMrL88M9mswkr0BFH13V0XcduP9r+V688Byik
      dtjaXuPLz7+g7GmltHSLe+sFWqJhfH4/46O9bG4nOcKrbYJ3mDe+EJZKpfD5fKIHOOKIdQCB
      4B1ACEDQ1AgBCJoaIQBBUyMEIGhqhAAETY0QgKCpEQIQNDVCAIKmRghA0NQIAQiaGiEAQVMj
      BCBoaoQABE2NEICgqRECEDQ1QgCCpkYIQNDUCAEImppXj01iGKR3N8EVJeSVWVmYJ1eT6Ovv
      Qa+C22FQqBoEvO4DyK5AcLC8cg+glrMkcgk21/Og5VjbVmiNRrDJJVZWkizNz1FWpYPIq0Bw
      4LxyD2B1BxnoiXP/PlCpsJPegkU4Eexk6fZlwiOTnA240LSHgbE0TaNWq3GkX0sgoFaroaoq
      1Wr1bWfllTjQ8Gw12c8Pf/QDsqtzrG9n6Rk7iaZskauoBFxWERjrHeJdCYz16rFBcztcnJ6h
      VLHiCU6ys3SXssXHe72tZGSNiN/HViaL3xVBDIQEhw0RGEvwUojAWALBO4AQgKCpEQIQNDVC
      AIKm5qkCuHz5Mn/xF3/xpvIiELxxniqAcrlMJpMhlUpRqVTeVJ4EgjfGcw2BfvnLXzIzM/O6
      8yIQvHFeaA7w85///HXlQyB4Kzx1JXhgYACfz4emaXR2dvLZZ5+9qXwJBG8EsRIseCnESrBA
      8A7wHM5wBgvXrpDXFL6e2eY//od/w9H2/xMIvuO5vEHX5+e4mqnSbfOSA6KvOVMCwZviuQTw
      wZ/8lIGigaQrhF93jgSCN8hzzQHmr/6Gv/wfv+bqVxcpvO4cCQRvkOfqASolDauWZTXhFJta
      BO8UzxCARmJji8jQcY6pC7jbBnG9mXwJBG+EZwigxuKd22yk0+ymskg7KqfOTuJ7M3kTCF47
      z5gDODnzw0+JOxW2EgpVrdT4A8MgvbNBulAFDHbWF1lc28GgRj5fQauWyRZKryn7AsGr8Vxz
      AMnipj1WZXsrRxXwPHHs27hAWsqBN1ZmfquMly22PP2kNlScJPB0jHK01wsF7yrPFEA6leb9
      P/nXtM5dI0krwfoEnogLVEhW6B7uwVfOkCzmWLp9W8QFekdpkrhARX7zq6/4yccD/PbSPLba
      XUbG//2+cwCHR2Jlt4ikp7H6giIu0DvMuxIX6BlzACtqdom//J9/zwc/+oyw20J9u63kdvjq
      ixkWF2fI2qLYMw9Yz8vEo2Ei0QBjY0NkM9mG3wkEh4FneoMaukZVM7BbJbLZIoGg/5XWAoQ3
      6LvBu+IN+sw5gGSRcTzqJ4JB/+vOj0DwRhHu0IKmRghA0NQIAQiaGiEAQVMjBCBoaoQABE2N
      EICgqRECEDQ1QgCCpkYIQNDUCAEImhohAEFTIwQgaGqEAARNjRCAoKkRAhA0NUIAgqbmucKi
      CAT7cetBAqWmNnzfFvbS2XL4dxAesABUbl76hp2KhZOnjqNVJAIenVTJoDV8+AtD8OL817+6
      yHa62PD9v7owwp/+9L23kKMX42AFoGaoObv5wftdQJbZxQLb6hbx4akDvYxAcFAcrACqOonN
      u3ye22TqVD9Ls1cIDU8w7raJwFjvGN8GxtrvOWq6fiSCZh2oABTdzpkPL1DanGcnmad3/DRS
      bZPdQpWo1y4CY71DfBsYS5LMg+TIFsuRCJp1oAKwu90sXLtKyRbhvYEOsi6VoDdEIlfE8NrF
      uwUEh44DFYBksTNx6tzjz5GIA4B4i2e/nwgEbxVhBhW8Vq7Pb/Hf//aK6bE//08/Iuh1vuEc
      7UUIQPBaqVRVNpPmb5bT9bdvCBErwYKmRghA0NSIIZDgrfOff/lbZpd3Gr7/6Hg3f/bvzlNV
      NXYz5q/Zigbd2K3yS19bCEBwCHj6XGB5K8Of/bdfmx77Lz//lKHOCH/1h1luLTaKqLstwJ/+
      sxP7pi0EIHgnWNzMMH1vs+H7ilJ76u/EHEDQ1AgBCJoaIQBBUyPmAIKmIJUr86d//r8bvhc9
      gKCpEQIQNDVCAIKmRghA0NQc8J7gIn/8w1dUJCdnLxxna1kh6i2Q0oMMdIQP9FICwUFwoALI
      ra/TfuIsoVqS5E6SdCJPJivx3qm+g7yMQHBgHOgQyDAkLBYJCQkDg2I+g2oAYjOk4JByoALw
      xaI8uPwll27dJxgK0to1xGDMyfzy9jPcnQSCt8OBDoEsziCffPrjhx8kCI4//Dd6kBcRCA6Q
      A14JltgTJeOJ/3VdRzcMdF3nr353Ha/byUfHu6mpGv906b5pau8Nx+mI+ri7ssv8WqrhuMNu
      5dPT/QD8wzfzaCZb7MZ6owy0h1neynDzQcL0Op+dG0KSJH5/bZFiudF7sC8eZKKvle1Ugctz
      G6Zp/PBUHy6Hja9vr5HMNvquxyNeTo20m/72KFKtVqnVanSFHXjtjeXusxtks1kkTWGgzW2a
      RqmYRzaqtAVsKCbnhN0WstksNaW8bxo1pUw2myXstpie0xawkc1mKZXM8yEZbyhClWEYGI8E
      oKoPY0lqmobFYtkTW8YwjD2fVVXFav1Op7quY7FY9nwGGr578vOz0vg2by+SRn0+v70fWZZf
      KA3ghe63/hpmeXmeMpMkac9vXrTMFEWhVqvh9Xpf6H4PW5m9MV+gbwvcYrE8zqyqqsiyvG9w
      JXgYgexpQbQ0TXuc7sumoes6hmE0FNKLpGEYBpqm7XkQL5rG85xzWMrsW5zO/aM6HIUye6vO
      cI8fgGGgairf9UUSVuvDDD+tUu5J4yk8K40nW0NNVdGf6BRlqxVLQz4MyvksqVwBq9NHWyTw
      XHl5Vj6ePGdl6QEhr50UYXqi33XdB3G/L5KGoeuomvb4e8kiY5Wfz3byOB+Pen7d0DEMkCQL
      1kfbGBvzYlCpKDicTqSGezEoZXfJVG24rBAKBfde5xGaWkMzJGw2K5LJNarFDMvr2+hW9yER
      gFZlZfEBJeVRmG27h7HBXmSpLvPlTf7mVzOEPDpbyTynf/jPGYi69qR569LnpKoymcQ6BHv4
      2Q8+2JuGkuIffnMJr8fG+uYOxy98ynhX5PHhxPoiybzy8INso6dvAJ/TujeNaoGL1+8wPjr4
      +EHWDyl2V25x+c4OtuouaSnMD3/4fcKuJx6UrvLV57/H29KBwx1gpK9jT5k4ULgxPcMWbeTi
      Xlq7BmgLuhse5rWvfofkj+Fwehjp78Zi+a5lL2YSrCzdYz5hoTugoQb7OT3S0dAS3rr0OYoz
      gtvlor+3B4dNfpxGtZRmfum7nVa+SDs98cZFzaXbl9ko2Qj5PXT39uFx7C2zdDpJLpOiWFFx
      BloY7GprKLPtpTtsbGfJFAvEJz5ktM219351lRuXvyHr7cNVS/O9jz7aU2YPH02Cr6cf4LVW
      iIycoTfiaiiz6csXSdSsuC3yIXGFkO30D41SzWfpHh5jcrgP2WLSxesGvmgnU+ODtIacrO/k
      G07RdAuDE5N0trdRq+QbY88YBg5/K1PHxoiG3OyksnsOx3uGGOyJsZOrEPfb0SWTIrI6sCsF
      tnZ2yeQbQ4MD6DrEeoeYGOzAZoX0t6J6AotkozUepy0SbDjW2jPKmQ8/4uOzJ5mcnKQ1sFfo
      6Bq5bIZCUaUlHifWEqa+h/cEWxkb6sXjDdLb2UZZacwDgKFCNB4n1hptaN0d3giTE6O49AKy
      J4JkNL4LAMDQIdTSSqytFbu1rswkiUjAzeZuiZHxCQa72kzTkK0WVhN5+tqDGLrJCZKFgM9D
      MblOTdpnUlxMY/W30dPqZTttvpHe6wkQ9TrRLFbkX/ziF78wPestoBYTzNxZJlOo0BIJYakX
      gSRTq5bQLQ66e/pob43gqCtsm02iVKjgC8cY7OnA43bXtXgymlpBNSx09gzQ0RbBad/bES7M
      3WJ+I0mnzyBphIj66oK81krc3y5w+uQUkYAXMyyyTKVcxrAHGR3sIRzwYa27H62cYnEzQ7ms
      EGuN7DkmSRJqKcWdxTQdsTCW+tqta+zu7lKqKMiylc2tBG2tbXvLzDDQZS9OCuSrMn09nTht
      jcMju1zj1twyarVCMNKCTa67VjnBzMwdspYA2UyK3s4YqqqiadrjOYDdYadcLFGp1vB4fdhM
      hkmJtXmWN3cpVqEl1Pi+CAmD1a0d2sN+7KE2/I5GIflCEXwuF7F4HL/H1ZCGzR1EqmQo4GW0
      L2bakLZ2dNLZ0UlfT9ch6QEe0dLeg88hUVH2Catt1NjeKdDR1U040oLf2fgwi8kEmitIV3sb
      0UjEZOKjsrWdIdbRRUs0QsDTOInr7umhxWNlLWuhK2rS0sh2Qg6Va9PTzN5fN81qrZQjV5Ho
      6ekmGAzjtNblw9DZ2NikqFvJprdN05BtLirJRb765hs2U8X6g3R09VCtKPT091EtptHqDXpa
      lXQ6SbZYoVwuUSxVTK+ztJqgoJSxaQUKFZMW3hmhs6ONWmaTzs4u0zQqhRyXr17mzs0ZclXT
      5pu+idOc/+AUsZB5rNjk9hqZkoJeK7CVMmm9tRqXr97A7fPhtJtPesupJa7dXmTt7jR//bf/
      yGa+8X6W797g62++4n/9398eLgFcvnyNnAZyNYdmapy14HM+rHjLW2nTNNyBEKnlOaZnZilX
      tcYTDAshn4Ub164xv2q+LlAsVhgf6ETRdJRa3cM0DMqKSu/gMD3dXcSjAdM0bA43einB9LVr
      7JoMf5AsBH0eCqkNqjS2ZACaWqEqefAZJVJl86HHe8eHuX3tOtHOYez1LbfVQSQcQi9lcXkD
      6Pusx0cCHpRynq2MgsthMi3UVAxPjNOTA0iaeT62dnZxuYP0d4fJl+rWUgyD/O4aX1y+wU5i
      m6s3Z03TiHcPM9IRZL3gZLLb13iCRcatV9lI7JLMNA5/AQzdINLRz/GRbnxume10ueGcaHsP
      w8OjBL3Ww7Ulsj3WTr5WIVfex3vI0KnWVCrFNBZfGz2xUMMpmlpDVWvsbm4yODzcWLVkGamc
      geAQetW8RUwnt5hb2GVgtIWdnELYvbcX0DSN1NYKKdWJ1+0hZDIM0jWVWk2ltJMg0jtmshou
      0dY9hC2s4PI33geAodWwOj34vQaZWqOY8/kcSs0gGAyAxXhkYak7qbDG/GqSLquPYkah00Sw
      wWgrE/0SWK1k0lk8raG96chWrOUk19Y03jt5vC6TD02ZPX3DtMQKpIsqHaFGQas62GpZ1hJZ
      RoaGG46ndzZI5ysEI22ARE3RcLrqqqeuUZScnBsfw2ZWQQwdR6iHruIqaS3E2fd7cXgbn00p
      l2JtO0P/0Pgh6QG0Kkv371G1yNjtbqLRqPkk2BHgzNlzfHhqnELRfILT1jPC+fPn6W11UVJM
      eoBKikQ6T6ZQYWNn1zSN/tEpLnxygVi0h76WuocpSXidFtZXlkkqVrY2V03T8EQ6OH/+PGcn
      2tnJmvQAusqN2XkiLS2mY1kAR6ibkyNx3PERjnU3isThcOL1B/G4XISCgcbKD+DtoD/uJ5VM
      07/P5PPm7TtE43HyO2t8efkqRn1PoRuE+ib40YWT2Gkc3myvL7K0tk4imaVWq6JpdeUuSYSi
      UXyWGklF5sGD+YY03N4A0WgEt8OG2xfAYTOpmpJM1G/l+vQ0M3eXGo/XyiRTKXLFMpVKGU32
      4rE3FkpiYx2ry83q2toh6QF0lUwmTVm10tnZTiAQxKz+o2T5+soMiioxctz8BWzby3eZW9rE
      5W9jsH7yCuBqY3iwl9m1bQaPmUcMW5i9QT6dJSnZGZzwM1gvAosdn8fJdmIJezRmmkYxuc70
      7QUMi4uTZ+omfNUiM3fuoRTyzM0v4PaGmBrd6zKe3d1gdX2DvGLFLSmUpQl6o3tbM7vdzq3p
      r9CDcTbvLPDJ9y7QMMfVFCq46Gr37fuw+2Nh1hIpVIuLlqDJWXqNB3dukc+lKdpj/PSjJ8pN
      kmht78ZfUShXFJAsjVagR2XmdTvYTiwRbWl0CXG4POS2b3Nvx8BdnqVy7Af0huqen2Qh4Pej
      5MpIsskcwO4h5C6TcQdoj7XgdTlM7zdXUhkYbGN7/fIhEYDNzYlTZ9BqZW5cucSc6uH75082
      WiNkK7puIei17Rvxy1BruAMR9FoZXafR31VXWNsp0RZ2UyiUINo41gyFQqymdCZ6fch2kyKy
      WIn1jeGpqHiD+7v6WR0eZE2hqhns6bPtHo4fnyIe7yTcEiW50xjSLxBtx6ZmmElHGA3tciVZ
      ahAAQFWDkM9HwrL9qOWuK7NKmrI1ypmx/n3z2do3RP7+Mp54J/29PY0WJ4tMMBzG7bSxXmo0
      PBi6jqrWUBQFLPKehUQAw9BRdQsTZ37IYLWKw7nPnEdTkQwJj8PCnXuLxE4O7rVa6TUWVlOc
      /96HfP7/fg+DHQ1p2L0ROtQEM5e+oHX0AwZjjdam3q4Wrl28iCY7D8kQSC1za+Y612/eJT4w
      yYUPprCarVYqSWqudo4NdbK62VhpANa2MoxNjhOwV0kXTaxJtTxlOcTEyCCJbXPHtmisnRaf
      xMp2GZfVZOJYLXBzYZ1oy/6tTD6bJBQfYLLbw/yGyYTN0LgzexcduDVrPil0RvrwKpvc3VQY
      6WhcKwBo6ezGLVs4ffp9bHVllt9dZ3o+gaW0wfT0NCvbGdM0rk9f5/aDRdIbS5RqJvdrsRIK
      hYnGuzk3NVp3HwaXv/gtcwvL7O7usptMUVPrBKAUuHv3Lnfv3WNpaYnlTfOhZ7RrmInBTmJD
      pzgzEmswG2OxMdgV5tb1aVq7RkzTqJXSzC8n6Js4SU+LuYl6eWUdRbZhtxyWPcGSjNfjxu1y
      kEkmWFrdaGhFCskNpu/u4jF2uT6/QW9H6940dJUHd28iORzMXb9GXvcQcu/tJpX8DtOzq7gt
      Ba7OzNHe3mmanXt3bnNnI0OHRydfb9CoZJm+fQ8lm+Te/AIrm8mG32+vzLOeqpJP3OfOVo3+
      FhNTqmRlsDfK7evX6Bk63ngcUKsFHG4/lWKeomJufSntrJMo6RiaSn2QWV+0g5PjvUQ7R5ga
      6aFSNe81PQ4X8YgfRbKBmW+kVuLml7/mb/7pD3xxba7h8PsXvo/PYUFCx+kOYG8Yvxuoqvr4
      T9PMzKSQT27wd3/3t/z+V//ITs2+d1HO0Fi+d4uNrErf0Ch2zBf1LDYHqBXWFu9TNDXH7l0I
      OxxDINlO70CjZeBJvJF2Tnqd/P7rO8Tawiatg5X+kWPM376FLNdY3C2hqAbOJzTg8LVwctLO
      jfu7VLYXyRcKQEvDtcLhFkZrsFWG3vq1GGeAkydPw0nQqhV0ubEHaOsewqLfZCHn5kRMZy5Z
      pMVX14IbOlvbGQamThNwmj8GtZDixux9RrsCrCby9EQahdTS1cva9i5JGQI+b+NE2NBYW17B
      W7ORMcyHa0OT4yQSO1QNK976xSeAWhnDG6HD5cYq1VUqSUKW7YSCAbK5HIVcmqoa27NAaXEG
      OHFiilxyi7LkxWExr5jlYpFQJEZ3xEapUjeRLm4wn3Hw8bCb//P7z/n4+5+YplFKLlP1dDMV
      2ObKcpoLo08+XwOlUmXi9FkwNMqV2iERwPNiVLG6WxkbG9r3lGIuyXq6RqzNRaWmEXDVjVl1
      lc3FG7gCgyj5bMPvF+/O4G4b4kRXN7euXcNu1kfWClycWaCWz6C7fHx85lTDKYqi4HH5uHfv
      HsUWk4AAkoTfI3P7+jSeYEvDJBhDxxbq4cKZAC6nnV5X41gWILG6DJ4o6+sb9HXFG09wtXL2
      hJV0Ns+xdpPjwPTlS7QPjOK22szNz64Wzpz7iEqxQI26yadhcPEPv6JsDRIKBfC4neYGjFqB
      mSsXKUcmsCu7fO/Dcw2ntPWO8Wm8n1JZwVe/WKYZVEop7q9ksVgdpJJJor7GybQ70oN9fZab
      eZg8Vmc5U9JcuZXg/KlRJIuFmZvXjpgALB488hrT09NE2vv2rgNoNdZ30rT1DjLxfhyLZJh7
      PTpCnD37fSTZgsXWuArcOzTG/MwVrm6X+ODC9wi5TYpIktHym8jBYazVxo06ALG+CdyFCpbI
      aSzOxspbrlRo6xwgUNOQrCbzCLVCJlsglUqiA22dLrxP9hS6Ri6fZyNVYnKgjWRiC1UzGs3H
      uSW+urGLrbjJSt7go2ONAQqidgvL27uEXE78fj9Pvm+inN3k4vQ9rIZGqLMThyfS0Gee/eQz
      0zLYwzOsQNsr82ymimi1Chtrq4ye+ylDsSdE4O/is+8/XIUeNR8xUi2muXVnAXcoTnsAcsUK
      QdcT8wDZiV7cZSeVxqpXqFQth2QO8LxYbWiFNA5PkKpaNyaWYGt5gT9++TULC/PcX16jqpp0
      tZVdvro6Sz5fQKk2jqu311fQZCf+YJCdtUXzsbdso8Xvw+Kw4vWYT7R2V+eYfbBJoVxFrrdm
      8dDtOp/PoSgKCbP1CJubkM9BLltAKWRR69tmQyefy9Iz0E8+naa3fwRbvbsFgDOIU8vRNTRG
      2GtufdkpqRwbH2VsqB9HnR01v7tJZOAE5ydbmds2GOjY67PEI4/O+r8n0ZUC95e3GP7gR/zs
      k4/5+P2Jhjy0dvYR8TmRZCfvffjp3sq/z3XquTVzk56xKYzdOaaXS8TDdWlY3Zz94Di5dJJU
      rsLp908esR6gsMlmpkKrv4hSUhnqfKItkqxMTp0gEGkhEm3Fsp/fumxHLaTZTrjxG3aiwb0V
      ONY1QMzc3eU7aiU2EklqrTEK+QSTjDWcYpOtpHe3ccsKTn8UT52LgdfrZXd9iZ1cEVek1/Qy
      1cwGeqCbyXCSSxtZ4oEneqxHvkBXv/gNcrAdh1PGzAqKIWF3eSgVC4Tb6wwHj+iIhbh9/Rp2
      u5vx0WGc9u9E4AvH2Vhb425Oo9cPa9tputrMV673Q7I5CfldLM/Poqg6Dn8bY/17e4FbF3/P
      dtVDLBokn9oi4/UQdD97Q86TWGSJ9cV5MgUVm79MuqAQ9e/t5W0uP4OD3/XIR0sAvh4mB1Os
      p4uMH6+bBxg6O1vr1Goq66srSA43g329yJZ6u7XMxOmz9He+wlZ9m4/x8VHmVrZpN7HgGJqK
      u7Wfc944BuwdusDjhTC1UmQlUWDQb+6S4Qj34Nm4w60tG6eP7ZNfXaYlHsdttZqvBOsVFMPL
      5EA3Nod5D5DKlBg+dpqwq7HCuUJxToTiGNllZjJButrMfZ+ejoRFfrhAVqrqaCb+RJNnf8Tk
      S6T8JFPvX3j4z8T4c//myAiglN1heXmRtZRBm09icydNi/+JSZ1FprN3iOTKXe4nH5ordbMa
      IVlYuHGJmjJGIBjZ15ltPwwlz9zCA9a3MrTHI2ytrzHQvrdFNNQKuXyRTCZDZmUO9+SnHIs/
      YcGxezh+/ATJrTWi7RJWh7lvu1pKUbYE+WBqwHxiCfQND5LOplFsLnMrkKZSqhTJ5XJ4AjZc
      jsZK3tbi5cpX3xBtiTb0AI/vCQlDq5l2Ms/CqJZIJLO0dg3R73Ga/v5pWzyfl5dJ48jMAdyB
      Fsb62pA9LYwNdJDJmXsDLixtMTY5jsdSIls0G787OXvhPK3hoPmS/TOQHD7GhvqwOryMjI6h
      lMwmwQY1pUwymaSsGua2dUPl5twCPr8f3z6+QLLNRS23zvT0dKM79CPyyS1mV3bJ726ae9Ba
      LBRSuyQSCfIlc9t5KNpGJOjD4XRjN9kvQC3PH6aXcRZXuH7P3PfpaVicPoYHBwjuU/nfJkem
      BwDA201/YJb59TITgwN7jxkPHQFOnhxn5uZNHL5OWv17Wzu9ppBKJVld22D+wQPOfPRj6qZ0
      z4fNx3hvkPm7c/QPTzUcluxeOrq8tHd2PY6W13iSBa9U3dcXaObGNIOjU3z08cdPzcrGThpJ
      c5DM6I8WD+uu5Yrzs5+4kWxO5H02n1+5Osvxjz7m/rUv2c3HafXX+eBoFXSrh9aWKJfmVin1
      xI5Oy/kMjpYAqmkWNzLE2sIoShV8T0xwDI3Fu7MUsBMK+PFHGsfM5fQ6l26uMbXJ+EUAAAcT
      SURBVNDThSeUoydm7l7wNIxqkcW1bUDC7nAhS40ep/dv3iA22M+VK9fxyRqR8Qv0huqGHpKF
      8ZOnSFdkzOZ65cwWF78pPrbKdA0fp8vEF6inuxN7TiXa2o7dbNJfSfCbf/oD8YExNIePcxO9
      DacM9bUxe/M2uuHFb2b2tfoZ7PCznS4y2NVGWanhMV0gOXocrbt4vBA2Rnu0zrZusdI/doyB
      WJD11SVu3rpNsc4d2tPax0++d4bWkIc2r33fDTFPRbYTCgUJ+P34fD48Jr5Am7tpbHY7QyMT
      jHT6zfem6ho3Ln/DzfurzNy61XDYFYxx5ux5zp9/+GdW+QEC0Theu4V0Jt3gPgKAZAGjyurK
      Cha5sXLnk+usZlTcUo1QrKNhi+nDNDRWVzYxaiXyqp2I33zOchQ5Wj3AUxfCqvzu7/8aLTLM
      yalT+HxebA3hQSRkm4NQtJVTkUYXiOdBslgxdI1iLkNRUXH4woTrNsScPNbHN99cI+BxMp+r
      cfYjk1XcRzvC1nc2kP2NvdWxfdy966kU0pQqNRz+xv0AhqFTUGx8/yf/EqsMNb3uBK3C9VsP
      OP3hBZyywfWLX5KOhAnX9wLVAhWrj854lGtLGeBZduKjw9ESgGxFK6TYzGtY/DF6eEIAsp1P
      fvZvKWS2uXnzGllV5vy5c/jrdxU94mWtDkatxG4yTaVcwuZwIZusNntaevk42oOuG1hkyz4T
      P4nYwBS+tiRVudES9bz5c7i9hGM+Ai4r9eP/3dV7PNipYlPSVJ0h+gbqTMeaRg1Ibj3c11zR
      DFRVo6Fa2Px0t6TZySlMTTzdZ+uocbQEkN9gI6/RFuto3BGmqzy4N0tGkekfO4bL5cJrsmn+
      lbE66e7u5tb1S0Q7+4n4zC04D4N6PaUS6yo3bl9H1h0U9HX6O80XqZ7F7MwMO4aHsF3j5Pvn
      9wxh0pks7b3H8WZnuV1paQytYnNx9vQJ1Efmo4njJ/F4TDYRobKdyHHuwvuYLTYfZY6WAHxt
      TI5bqeSSBOvdoSWZvpFjD5fMX2ceDINqtYquG6i1GjXVjmOfCAVPxWJluCNO2dWKVTU3cT4P
      Yb+H5ZVd7P5Igx9QR3cfK5tLFHATkTJsJb3EI09sAJIsuD0mm8/r0cHjMrh29QreSAdjfeZO
      dUeRoyWAWoX1RIELZ042Lgy97or/LXqNXC5He/cAqGWKZSte9/7xMU1RKyyvbaJJDqRKFsNu
      HibkeahZfXz245M4HHbkumGTJ9jKWPDlepbHGAZqKU3RFuGD/gCX726CEMBbwuLApia5Oj1N
      a0efaVSI141kc9HZab6R5rmx2AhHImQTK2wUbQRd5hv8n4viJr/7Y5r2eIyp8UHzYAKvgqGx
      vrbKxmqZeTnGQF/vwab/ljlaArDacdhs6LqG3WE2Vj0iWGR8HhfXFxaphPooprcYHnrx96gZ
      us7oBz9i+HG489eRVys9o8dR3FmK2wukPeG9w6gjztFaByhukZXjvDfczvyy+X7eI4Mk09nR
      SiW9ic37Eo55Wombtxcobs/zu6+m+fzrK+yz0/DVqRZZXJwhp3jY2XmJtZNDzJHpAQrJDe4t
      JZDLNa7fk4nFBp79o0OMqun0jJ2itU/B5njBOQRAtcRuQWGkN87UVA/3Zr5B0w2sT7M8vSyu
      Fs6d/ACry4th8haeo8yREcDDPcEeLl6bpVgs4ajfEHOUKG/xxY0MA4EsCxk7+Vyaf/ET8z2u
      ++KM0OtfYnpuGYeh4Ax1Y39dNkq1wPUvfs29nI3u/mF+fO7Y67nOW+DICAB4HBmuml7l8urL
      mw7fPjK1WoXWvmO0AH/8+uqLJyFJ9E+cpk/XMdjH4e6geNqm+CPOG3tH2IGgZLl4bRa1phEf
      mqT/JZzZDgcGO2sLLG7mkAydzsHxxu17hwRdq1GpalgkKOXSaDYfLSEvlUoFRVEIBF5mg8zh
      4Wj1AHY3XpuBI9aLyZ6NI4RES+cQ0Y7GF74dNtJrc6xp7Uz1R7DpDr64dZ/vfdDoAn5UOVoC
      KKxzfzVJmxygki7R2XJUe4CHHOaK/y3uYAv5W/MsygVKqR3C4XdnEQyOmgA87fS1r7CZ3GV0
      6uTbzk1T4PK3cfqEh0JZIRgIE9jnjThHlSMjgFImweL6DhZPhJhdoVpRgHdnQebQIkk4PT6c
      z+MzdAQ5MgthTn+E4aFBPDaJklLDvU9QWoHgRTgyPUAxtcmt+XU6+gY5PTjWGBtUIHgJjkwP
      INscBIN+iukE83fn2NjNve0sCd4BjtY6gODQ8K6sAxyZHkAgeB0IAQiaGiEAQVMjBCBoaoQA
      BE2NEICgqRECEDQ1QgCCpkYIQNDUCAEImhohAEFTIwQgaGqEAARNjRCAoKkRAhA0NUIAgqZG
      CEDQ1AgBCJoaIQBBUyMEIGhqhAAETY0QgKCp+f8ER6sCbGwHHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='Q9' width='184'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
